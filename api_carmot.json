{
  "openapi": "3.1.0",
  "info": {
    "title": "API_CARMOT",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8000/api"
    }
  ],
  "paths": {
    "/crm/agendas": {
      "get": {
        "operationId": "agendas.index",
        "summary": "Muestra una lista de las agendas",
        "tags": [
          "Agenda"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AgendaResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "agendas.store",
        "summary": "Almacena una nueva agenda en la base de datos",
        "tags": [
          "Agenda"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreAgendaRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Agenda creada exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/AgendaResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/crm/agendas/{agenda}": {
      "get": {
        "operationId": "agendas.show",
        "summary": "Muestra la agenda especificada",
        "tags": [
          "Agenda"
        ],
        "parameters": [
          {
            "name": "agenda",
            "in": "path",
            "required": true,
            "description": "The agenda ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AgendaResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "agendas.update",
        "summary": "Actualiza la agenda especificada en la base de datos",
        "tags": [
          "Agenda"
        ],
        "parameters": [
          {
            "name": "agenda",
            "in": "path",
            "required": true,
            "description": "The agenda ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAgendaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Agenda actualizada exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/AgendaResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "agendas.destroy",
        "summary": "Elimina la agenda especificada de la base de datos (soft delete)",
        "tags": [
          "Agenda"
        ],
        "parameters": [
          {
            "name": "agenda",
            "in": "path",
            "required": true,
            "description": "The agenda ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Soft delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Agenda eliminada exitosamente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/crm/agendas/{id}/restore": {
      "post": {
        "operationId": "agendas.restore",
        "summary": "Restaura una agenda eliminada (soft delete)",
        "tags": [
          "Agenda"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Agenda restaurada exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/AgendaResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/crm/agendas/{id}/force-delete": {
      "delete": {
        "operationId": "agendas.force-delete",
        "summary": "Elimina permanentemente una agenda",
        "tags": [
          "Agenda"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Agenda eliminada permanentemente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/crm/agendas/trashed/list": {
      "get": {
        "operationId": "agendas.trashed",
        "summary": "Obtiene solo las agendas eliminadas (soft delete)",
        "tags": [
          "Agenda"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AgendaResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/crm/agendas/filters/options": {
      "get": {
        "operationId": "agendas.filters",
        "summary": "Obtiene las opciones de filtros disponibles",
        "tags": [
          "Agenda"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status_options": {
                          "type": "array",
                          "prefixItems": [
                            {
                              "type": "string",
                              "enum": [
                                "Agendado"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "Asistió"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "No asistió"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "Reprogramó"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "Canceló"
                              ]
                            }
                          ],
                          "minItems": 5,
                          "maxItems": 5,
                          "additionalItems": false
                        },
                        "jornada_options": {
                          "type": "object",
                          "properties": {
                            "am": {
                              "type": "string",
                              "enum": [
                                "AM"
                              ]
                            },
                            "pm": {
                              "type": "string",
                              "enum": [
                                "PM"
                              ]
                            }
                          },
                          "required": [
                            "am",
                            "pm"
                          ]
                        },
                        "referidos": {
                          "type": "string"
                        },
                        "agendadores": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "status_options",
                        "jornada_options",
                        "referidos",
                        "agendadores"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/crm/agendas/statistics": {
      "get": {
        "operationId": "agendas.statistics",
        "summary": "Obtiene estadísticas de agendas",
        "tags": [
          "Agenda"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "totales": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string"
                            },
                            "activos": {
                              "type": "string"
                            },
                            "eliminados": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total",
                            "activos",
                            "eliminados"
                          ]
                        },
                        "por_status": {
                          "type": "object",
                          "properties": {
                            "agendados": {
                              "type": "string"
                            },
                            "asistieron": {
                              "type": "string"
                            },
                            "no_asistieron": {
                              "type": "string"
                            },
                            "reprogramaron": {
                              "type": "string"
                            },
                            "cancelaron": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "agendados",
                            "asistieron",
                            "no_asistieron",
                            "reprogramaron",
                            "cancelaron"
                          ]
                        },
                        "por_jornada": {
                          "type": "string"
                        },
                        "por_agendador": {
                          "type": "string"
                        },
                        "por_fecha": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "totales",
                        "por_status",
                        "por_jornada",
                        "por_agendador",
                        "por_fecha"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/configuracion/areas": {
      "get": {
        "operationId": "areas.index",
        "summary": "Muestra una lista de las áreas",
        "tags": [
          "Area"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AreaResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "areas.store",
        "summary": "Almacena una nueva área en la base de datos",
        "tags": [
          "Area"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreAreaRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Área creada exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/AreaResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/configuracion/areas/{area}": {
      "get": {
        "operationId": "areas.show",
        "summary": "Muestra el área especificada",
        "tags": [
          "Area"
        ],
        "parameters": [
          {
            "name": "area",
            "in": "path",
            "required": true,
            "description": "The area ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AreaResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "areas.update",
        "summary": "Actualiza el área especificada en la base de datos",
        "tags": [
          "Area"
        ],
        "parameters": [
          {
            "name": "area",
            "in": "path",
            "required": true,
            "description": "The area ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Área actualizada exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/AreaResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "areas.destroy",
        "summary": "Elimina el área especificada de la base de datos (soft delete)",
        "tags": [
          "Area"
        ],
        "parameters": [
          {
            "name": "area",
            "in": "path",
            "required": true,
            "description": "The area ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Soft delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Área eliminada exitosamente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/configuracion/areas/restore/{id}": {
      "post": {
        "operationId": "areas.restore",
        "summary": "Restaura un área eliminada (soft delete)",
        "tags": [
          "Area"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Área restaurada exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/AreaResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/configuracion/areas/force/{id}": {
      "delete": {
        "operationId": "areas.force-delete",
        "summary": "Elimina permanentemente un área",
        "tags": [
          "Area"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Área eliminada permanentemente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/configuracion/areas/trashed": {
      "get": {
        "operationId": "areas.trashed",
        "summary": "Obtiene solo las áreas eliminadas (soft delete)",
        "tags": [
          "Area"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AreaResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/configuracion/areas/filters/options": {
      "get": {
        "operationId": "areas.filters",
        "summary": "Obtiene las opciones de filtros disponibles",
        "tags": [
          "Area"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "sedes": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "sedes"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/configuracion/areas/statistics": {
      "get": {
        "operationId": "areas.statistics",
        "summary": "Obtiene estadísticas de áreas",
        "tags": [
          "Area"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "totales": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string"
                            },
                            "activos": {
                              "type": "string"
                            },
                            "eliminados": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total",
                            "activos",
                            "eliminados"
                          ]
                        },
                        "por_estado": {
                          "type": "object",
                          "properties": {
                            "activos": {
                              "type": "string"
                            },
                            "inactivos": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "activos",
                            "inactivos"
                          ]
                        },
                        "con_sedes": {
                          "type": "object",
                          "properties": {
                            "con_sedes": {
                              "type": "string"
                            },
                            "sin_sedes": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "con_sedes",
                            "sin_sedes"
                          ]
                        },
                        "por_sede": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "totales",
                        "por_estado",
                        "con_sedes",
                        "por_sede"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/login": {
      "post": {
        "operationId": "auth.login",
        "summary": "Iniciar sesión de usuario",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Inicio de sesión exitoso"
                      ]
                    },
                    "access_token": {
                      "type": "string"
                    },
                    "token_type": {
                      "type": "string",
                      "enum": [
                        "Bearer"
                      ]
                    }
                  },
                  "required": [
                    "message",
                    "access_token",
                    "token_type"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "operationId": "auth.logout",
        "summary": "Cerrar sesión del usuario",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Cerró sesión exitosamente"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/user": {
      "get": {
        "operationId": "auth.user",
        "summary": "Obtener información del usuario autenticado",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/dashboard/kpis/{kpiId}/chart-data": {
      "get": {
        "operationId": "chartData.getChartData",
        "summary": "Obtiene datos para gráficos de un KPI específico",
        "tags": [
          "ChartData"
        ],
        "parameters": [
          {
            "name": "kpiId",
            "in": "path",
            "required": true,
            "description": "ID del KPI",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "group_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chart_type",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bar"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "error"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "enum": [
                            "El parámetro group_by es obligatorio."
                          ]
                        }
                      },
                      "required": [
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "Error interno del servidor"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "No se pudieron obtener los datos del gráfico."
                      ]
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/kpis/{kpiId}/chart-statistics": {
      "get": {
        "operationId": "chartData.getChartStatistics",
        "summary": "Obtiene estadísticas adicionales para los datos de un gráfico",
        "tags": [
          "ChartData"
        ],
        "parameters": [
          {
            "name": "kpiId",
            "in": "path",
            "required": true,
            "description": "ID del KPI",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "group_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chart_type",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "bar"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "statistics": {
                      "type": "string"
                    },
                    "data": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "statistics",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "El parámetro group_by es obligatorio."
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "Error interno del servidor"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "No se pudieron obtener las estadísticas del gráfico."
                      ]
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/dashboard-cards/{cardId}/chart-data": {
      "get": {
        "operationId": "chartData.getChartDataForCard",
        "summary": "Obtiene datos para una tarjeta de dashboard específica",
        "tags": [
          "ChartData"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "description": "ID de la tarjeta de dashboard",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "Error interno del servidor"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "No se pudieron obtener los datos del gráfico."
                      ]
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/chart-types/{chartType}/parameters": {
      "get": {
        "operationId": "chartData.getChartParameters",
        "summary": "Obtiene parámetros disponibles para un tipo de gráfico específico",
        "tags": [
          "ChartData"
        ],
        "parameters": [
          {
            "name": "chartType",
            "in": "path",
            "required": true,
            "description": "Tipo de gráfico",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "chart_type": {
                      "type": "string"
                    },
                    "parameters": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "chart_type",
                    "parameters"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "Error interno del servidor"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "No se pudieron obtener los parámetros del gráfico."
                      ]
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/models/{modelId}/group-by-fields": {
      "get": {
        "operationId": "chartData.getGroupByFields",
        "summary": "Obtiene campos disponibles para agrupación de un modelo",
        "tags": [
          "ChartData"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "description": "ID del modelo",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "model_id": {
                      "type": "string"
                    },
                    "fields": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "model_id",
                    "fields"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "Modelo no encontrado o no configurado."
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "Error interno del servidor"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "No se pudieron obtener los campos de agrupación."
                      ]
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/filter-types": {
      "get": {
        "operationId": "chartData.getAvailableFilterTypes",
        "summary": "Obtiene tipos de filtros disponibles",
        "tags": [
          "ChartData"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "filter_types": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "filter_types"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "Error interno del servidor"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "No se pudieron obtener los tipos de filtros."
                      ]
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/academico/ciclos": {
      "get": {
        "operationId": "ciclos.index",
        "summary": "Muestra una lista de los ciclos",
        "tags": [
          "Ciclo"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CicloResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "ciclos.store",
        "summary": "Almacena un nuevo ciclo en la base de datos",
        "tags": [
          "Ciclo"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCicloRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Ciclo creado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/CicloResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/academico/ciclos/{ciclo}": {
      "get": {
        "operationId": "ciclos.show",
        "summary": "Muestra el ciclo especificado",
        "tags": [
          "Ciclo"
        ],
        "parameters": [
          {
            "name": "ciclo",
            "in": "path",
            "required": true,
            "description": "The ciclo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CicloResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "ciclos.update",
        "summary": "Actualiza el ciclo especificado en la base de datos",
        "tags": [
          "Ciclo"
        ],
        "parameters": [
          {
            "name": "ciclo",
            "in": "path",
            "required": true,
            "description": "The ciclo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCicloRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Ciclo actualizado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/CicloResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "ciclos.destroy",
        "summary": "Elimina el ciclo especificado de la base de datos (soft delete)",
        "tags": [
          "Ciclo"
        ],
        "parameters": [
          {
            "name": "ciclo",
            "in": "path",
            "required": true,
            "description": "The ciclo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Soft delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Ciclo eliminado exitosamente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "No se puede eliminar el ciclo porque tiene grupos asociados."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/academico/ciclos/{id}/restore": {
      "post": {
        "operationId": "ciclos.restore",
        "summary": "Restaura un ciclo eliminado (soft delete)",
        "tags": [
          "Ciclo"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Ciclo restaurado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/CicloResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/academico/ciclos/{id}/force-delete": {
      "delete": {
        "operationId": "ciclos.force-delete",
        "summary": "Elimina permanentemente un ciclo",
        "tags": [
          "Ciclo"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Ciclo eliminado permanentemente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "No se puede eliminar permanentemente el ciclo porque tiene grupos asociados."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/academico/ciclos/trashed": {
      "get": {
        "operationId": "ciclos.trashed",
        "summary": "Obtiene solo los ciclos eliminados (soft delete)",
        "tags": [
          "Ciclo"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CicloResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/academico/ciclos/filters": {
      "get": {
        "operationId": "ciclos.filters",
        "summary": "Obtiene las opciones de filtros disponibles",
        "tags": [
          "Ciclo"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status_options": {
                          "type": "array",
                          "prefixItems": [
                            {
                              "type": "string",
                              "enum": [
                                "Inactivo"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "Activo"
                              ]
                            }
                          ],
                          "minItems": 2,
                          "maxItems": 2,
                          "additionalItems": false
                        },
                        "sedes": {
                          "type": "string"
                        },
                        "cursos": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "status_options",
                        "sedes",
                        "cursos"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/academico/ciclos/statistics": {
      "get": {
        "operationId": "ciclos.statistics",
        "summary": "Obtiene estadísticas de ciclos",
        "tags": [
          "Ciclo"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "totales": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string"
                            },
                            "activos": {
                              "type": "string"
                            },
                            "eliminados": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total",
                            "activos",
                            "eliminados"
                          ]
                        },
                        "por_status": {
                          "type": "object",
                          "properties": {
                            "activos": {
                              "type": "string"
                            },
                            "inactivos": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "activos",
                            "inactivos"
                          ]
                        },
                        "por_sede": {
                          "type": "string"
                        },
                        "por_curso": {
                          "type": "string"
                        },
                        "con_grupos": {
                          "type": "string"
                        },
                        "sin_grupos": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "totales",
                        "por_status",
                        "por_sede",
                        "por_curso",
                        "con_grupos",
                        "sin_grupos"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/academico/ciclos/{ciclo}/asignar-grupos": {
      "post": {
        "operationId": "ciclos.asignar-grupos",
        "summary": "Asigna grupos a un ciclo",
        "tags": [
          "Ciclo"
        ],
        "parameters": [
          {
            "name": "ciclo",
            "in": "path",
            "required": true,
            "description": "The ciclo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "grupos": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": [
                  "grupos"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Grupos asignados exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/CicloResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/academico/ciclos/{ciclo}/desasignar-grupo": {
      "post": {
        "operationId": "ciclos.desasignar-grupo",
        "summary": "Desasigna un grupo de un ciclo",
        "tags": [
          "Ciclo"
        ],
        "parameters": [
          {
            "name": "ciclo",
            "in": "path",
            "required": true,
            "description": "The ciclo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "grupo_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "grupo_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Grupo desasignado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/CicloResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/academico/ciclos/{ciclo}/calcular-fecha-fin": {
      "post": {
        "operationId": "ciclos.calcular-fecha-fin",
        "summary": "Calcula y actualiza la fecha de fin del ciclo",
        "tags": [
          "Ciclo"
        ],
        "parameters": [
          {
            "name": "ciclo",
            "in": "path",
            "required": true,
            "description": "The ciclo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Fecha de fin calculada exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/CicloResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "No se pudo calcular la fecha de fin. Verifique que el ciclo tenga fecha de inicio y grupos con horarios configurados."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/academico/ciclos/{ciclo}/informacion-calculo": {
      "get": {
        "operationId": "ciclos.informacion-calculo",
        "summary": "Obtiene información detallada del cálculo de fechas del ciclo",
        "tags": [
          "Ciclo"
        ],
        "parameters": [
          {
            "name": "ciclo",
            "in": "path",
            "required": true,
            "description": "The ciclo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "ciclo": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "nombre": {
                              "type": "string"
                            },
                            "fecha_inicio": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "format": "date-time"
                            },
                            "fecha_fin": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "format": "date-time"
                            },
                            "fecha_fin_automatica": {
                              "type": "boolean"
                            },
                            "duracion_dias": {
                              "type": [
                                "integer",
                                "null"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "nombre",
                            "fecha_inicio",
                            "fecha_fin",
                            "fecha_fin_automatica",
                            "duracion_dias"
                          ]
                        },
                        "grupos": {
                          "type": "string"
                        },
                        "calculos": {
                          "type": "object",
                          "properties": {
                            "total_horas": {
                              "type": "integer"
                            },
                            "horas_por_semana": {
                              "type": "integer"
                            },
                            "semanas_estimadas": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "enum": [
                                    0
                                  ]
                                }
                              ]
                            },
                            "fecha_fin_calculada": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "format": "date-time"
                            }
                          },
                          "required": [
                            "total_horas",
                            "horas_por_semana",
                            "semanas_estimadas",
                            "fecha_fin_calculada"
                          ]
                        },
                        "estado": {
                          "type": "object",
                          "properties": {
                            "en_curso": {
                              "type": "boolean"
                            },
                            "finalizado": {
                              "type": "boolean"
                            },
                            "por_iniciar": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "en_curso",
                            "finalizado",
                            "por_iniciar"
                          ]
                        }
                      },
                      "required": [
                        "ciclo",
                        "grupos",
                        "calculos",
                        "estado"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/academico/ciclos/{ciclo}/actualizar-orden-grupo": {
      "post": {
        "operationId": "ciclos.actualizar-orden-grupo",
        "summary": "Actualiza el orden de un grupo específico en el ciclo",
        "tags": [
          "Ciclo"
        ],
        "parameters": [
          {
            "name": "ciclo",
            "in": "path",
            "required": true,
            "description": "The ciclo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "grupo_id": {
                    "type": "integer"
                  },
                  "nuevo_orden": {
                    "type": "integer",
                    "minimum": 1
                  }
                },
                "required": [
                  "grupo_id",
                  "nuevo_orden"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Orden del grupo actualizado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/CicloResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/academico/ciclos/{ciclo}/reordenar-grupos": {
      "post": {
        "operationId": "ciclos.reordenar-grupos",
        "summary": "Reordena todos los grupos del ciclo",
        "tags": [
          "Ciclo"
        ],
        "parameters": [
          {
            "name": "ciclo",
            "in": "path",
            "required": true,
            "description": "The ciclo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nuevo_orden": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": [
                  "nuevo_orden"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Grupos reordenados exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/CicloResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/academico/ciclos/{ciclo}/cronograma": {
      "get": {
        "operationId": "ciclos.cronograma",
        "summary": "Obtiene el cronograma detallado del ciclo",
        "tags": [
          "Ciclo"
        ],
        "parameters": [
          {
            "name": "ciclo",
            "in": "path",
            "required": true,
            "description": "The ciclo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "ciclo": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "nombre": {
                              "type": "string"
                            },
                            "fecha_inicio": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "format": "date-time"
                            },
                            "fecha_fin": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "format": "date-time"
                            },
                            "fecha_fin_automatica": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "id",
                            "nombre",
                            "fecha_inicio",
                            "fecha_fin",
                            "fecha_fin_automatica"
                          ]
                        },
                        "cronograma": {
                          "type": "string"
                        },
                        "resumen": {
                          "type": "object",
                          "properties": {
                            "total_grupos": {
                              "type": "string"
                            },
                            "duracion_total_dias": {
                              "type": [
                                "integer",
                                "null"
                              ]
                            },
                            "total_horas": {
                              "type": "integer"
                            },
                            "horas_por_semana_promedio": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "enum": [
                                    0
                                  ]
                                }
                              ]
                            }
                          },
                          "required": [
                            "total_grupos",
                            "duracion_total_dias",
                            "total_horas",
                            "horas_por_semana_promedio"
                          ]
                        }
                      },
                      "required": [
                        "ciclo",
                        "cronograma",
                        "resumen"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/academico/ciclos/{ciclo}/siguiente-orden": {
      "get": {
        "operationId": "ciclos.siguiente-orden",
        "summary": "Obtiene el siguiente orden disponible para un nuevo grupo",
        "tags": [
          "Ciclo"
        ],
        "parameters": [
          {
            "name": "ciclo",
            "in": "path",
            "required": true,
            "description": "The ciclo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "siguiente_orden": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "siguiente_orden"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/academico/cursos": {
      "get": {
        "operationId": "cursos.index",
        "summary": "Muestra una lista de los cursos",
        "tags": [
          "Curso"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CursoResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "cursos.store",
        "summary": "Almacena un nuevo curso en la base de datos",
        "tags": [
          "Curso"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCursoRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Curso creado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/CursoResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/academico/cursos/{curso}": {
      "get": {
        "operationId": "cursos.show",
        "summary": "Muestra el curso especificado",
        "tags": [
          "Curso"
        ],
        "parameters": [
          {
            "name": "curso",
            "in": "path",
            "required": true,
            "description": "The curso ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CursoResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "cursos.update",
        "summary": "Actualiza el curso especificado en la base de datos",
        "tags": [
          "Curso"
        ],
        "parameters": [
          {
            "name": "curso",
            "in": "path",
            "required": true,
            "description": "The curso ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCursoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Curso actualizado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/CursoResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "cursos.destroy",
        "summary": "Elimina el curso especificado de la base de datos (soft delete)",
        "tags": [
          "Curso"
        ],
        "parameters": [
          {
            "name": "curso",
            "in": "path",
            "required": true,
            "description": "The curso ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Soft delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Curso eliminado exitosamente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "No se puede eliminar el curso porque tiene estudiantes asociados."
                          ]
                        }
                      },
                      "required": [
                        "message"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "No se puede eliminar el curso porque tiene referidos asociados."
                          ]
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/academico/cursos/{id}/restore": {
      "post": {
        "operationId": "cursos.restore",
        "summary": "Restaura un curso eliminado (soft delete)",
        "tags": [
          "Curso"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Curso restaurado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/CursoResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/academico/cursos/{id}/force-delete": {
      "delete": {
        "operationId": "cursos.force-delete",
        "summary": "Elimina permanentemente un curso",
        "tags": [
          "Curso"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Curso eliminado permanentemente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "No se puede eliminar permanentemente el curso porque tiene estudiantes asociados."
                          ]
                        }
                      },
                      "required": [
                        "message"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "No se puede eliminar permanentemente el curso porque tiene referidos asociados."
                          ]
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/academico/cursos/trashed": {
      "get": {
        "operationId": "cursos.trashed",
        "summary": "Obtiene solo los cursos eliminados (soft delete)",
        "tags": [
          "Curso"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CursoResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/academico/cursos/filters": {
      "get": {
        "operationId": "cursos.filters",
        "summary": "Obtiene las opciones de filtros disponibles",
        "tags": [
          "Curso"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status_options": {
                          "type": "array",
                          "prefixItems": [
                            {
                              "type": "string",
                              "enum": [
                                "Inactivo"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "Activo"
                              ]
                            }
                          ],
                          "minItems": 2,
                          "maxItems": 2,
                          "additionalItems": false
                        },
                        "tipo_options": {
                          "type": "array",
                          "prefixItems": [
                            {
                              "type": "string",
                              "enum": [
                                "Curso Práctico"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "Técnico Laboral"
                              ]
                            }
                          ],
                          "minItems": 2,
                          "maxItems": 2,
                          "additionalItems": false
                        },
                        "cursos": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "status_options",
                        "tipo_options",
                        "cursos"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/academico/cursos/statistics": {
      "get": {
        "operationId": "cursos.statistics",
        "summary": "Obtiene estadísticas de cursos",
        "tags": [
          "Curso"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "totales": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string"
                            },
                            "activos": {
                              "type": "string"
                            },
                            "eliminados": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total",
                            "activos",
                            "eliminados"
                          ]
                        },
                        "por_status": {
                          "type": "object",
                          "properties": {
                            "activos": {
                              "type": "string"
                            },
                            "inactivos": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "activos",
                            "inactivos"
                          ]
                        },
                        "por_duracion": {
                          "type": "string"
                        },
                        "por_tipo": {
                          "type": "string"
                        },
                        "con_referidos": {
                          "type": "string"
                        },
                        "con_estudiantes": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "totales",
                        "por_status",
                        "por_duracion",
                        "por_tipo",
                        "con_referidos",
                        "con_estudiantes"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/dashboard/dashboards": {
      "get": {
        "operationId": "dashboards.index",
        "summary": "Obtiene una lista paginada de dashboards",
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of `DashboardResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DashboardResource"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "dashboards.store",
        "summary": "Crea un nuevo dashboard",
        "tags": [
          "Dashboard"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreDashboardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "`DashboardResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DashboardResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/dashboard/dashboards/{dashboardId}": {
      "get": {
        "operationId": "dashboards.show",
        "summary": "Obtiene un dashboard específico con valores de KPIs calculados",
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "dashboardId",
            "in": "path",
            "required": true,
            "description": "ID del dashboard",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`DashboardResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DashboardResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "dashboards.update",
        "summary": "Actualiza un dashboard existente",
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "dashboardId",
            "in": "path",
            "required": true,
            "description": "ID del dashboard",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDashboardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`DashboardResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DashboardResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "dashboards.destroy",
        "summary": "Elimina un dashboard",
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "dashboardId",
            "in": "path",
            "required": true,
            "description": "ID del dashboard",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Dashboard eliminado exitosamente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/dashboard/dashboards/{dashboardId}/export-pdf": {
      "post": {
        "operationId": "dashboard.exportPdf",
        "summary": "Exporta un dashboard a PDF",
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "dashboardId",
            "in": "path",
            "required": true,
            "description": "ID del dashboard",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TODO: Implementar generación de PDF\nPor ahora retornamos un JSON con los datos del dashboard",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Funcionalidad de exportación a PDF pendiente de implementar"
                      ]
                    },
                    "dashboard": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "dashboard"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/dashboard/dashboard-cards": {
      "get": {
        "operationId": "dashboard-cards.index",
        "summary": "Obtiene una lista paginada de tarjetas de dashboard",
        "tags": [
          "DashboardCard"
        ],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of `DashboardCardResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DashboardCardResource"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "dashboard-cards.store",
        "summary": "Crea una nueva tarjeta de dashboard",
        "tags": [
          "DashboardCard"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreDashboardCardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "`DashboardCardResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DashboardCardResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/dashboard/dashboard-cards/{id}": {
      "get": {
        "operationId": "dashboard-cards.show",
        "summary": "Obtiene una tarjeta de dashboard específica con su valor de KPI calculado",
        "tags": [
          "DashboardCard"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID de la tarjeta",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`DashboardCardResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DashboardCardResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "dashboard-cards.update",
        "summary": "Actualiza una tarjeta de dashboard existente",
        "tags": [
          "DashboardCard"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID de la tarjeta",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDashboardCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`DashboardCardResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DashboardCardResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "dashboard-cards.destroy",
        "summary": "Elimina una tarjeta de dashboard",
        "tags": [
          "DashboardCard"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID de la tarjeta",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Tarjeta de dashboard eliminada exitosamente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/academico/grupos": {
      "get": {
        "operationId": "grupos.index",
        "summary": "Muestra una lista de los grupos",
        "tags": [
          "Grupo"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GrupoResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "grupos.store",
        "summary": "Almacena un nuevo grupo en la base de datos",
        "tags": [
          "Grupo"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreGrupoRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Grupo creado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/GrupoResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "Error al crear el grupo."
                          ]
                        },
                        "error": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "message",
                        "error"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "Error al asignar horarios al grupo."
                          ]
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/academico/grupos/{grupo}": {
      "get": {
        "operationId": "grupos.show",
        "summary": "Muestra el grupo especificado",
        "tags": [
          "Grupo"
        ],
        "parameters": [
          {
            "name": "grupo",
            "in": "path",
            "required": true,
            "description": "The grupo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GrupoResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "grupos.update",
        "summary": "Actualiza el grupo especificado en la base de datos",
        "tags": [
          "Grupo"
        ],
        "parameters": [
          {
            "name": "grupo",
            "in": "path",
            "required": true,
            "description": "The grupo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGrupoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Grupo actualizado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/GrupoResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "grupos.destroy",
        "summary": "Elimina el grupo especificado de la base de datos (soft delete)",
        "tags": [
          "Grupo"
        ],
        "parameters": [
          {
            "name": "grupo",
            "in": "path",
            "required": true,
            "description": "The grupo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Soft delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Grupo eliminado exitosamente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "No se puede eliminar el grupo porque tiene estudiantes inscritos."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/academico/grupos/{id}/restore": {
      "post": {
        "operationId": "grupos.restore",
        "summary": "Restaura un grupo eliminado (soft delete)",
        "tags": [
          "Grupo"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Grupo restaurado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/GrupoResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/academico/grupos/{id}/force-delete": {
      "delete": {
        "operationId": "grupos.force-delete",
        "summary": "Elimina permanentemente un grupo",
        "tags": [
          "Grupo"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Grupo eliminado permanentemente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "No se puede eliminar permanentemente el grupo porque tiene estudiantes inscritos."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/academico/grupos/trashed": {
      "get": {
        "operationId": "grupos.trashed",
        "summary": "Obtiene solo los grupos eliminados (soft delete)",
        "tags": [
          "Grupo"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GrupoResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/academico/grupos/filters": {
      "get": {
        "operationId": "grupos.filters",
        "summary": "Obtiene las opciones de filtros disponibles",
        "tags": [
          "Grupo"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status_options": {
                          "type": "array",
                          "prefixItems": [
                            {
                              "type": "string",
                              "enum": [
                                "Inactivo"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "Activo"
                              ]
                            }
                          ],
                          "minItems": 2,
                          "maxItems": 2,
                          "additionalItems": false
                        },
                        "jornada_options": {
                          "type": "array",
                          "prefixItems": [
                            {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "integer",
                                  "enum": [
                                    0
                                  ]
                                },
                                "label": {
                                  "type": "string",
                                  "enum": [
                                    "Mañana"
                                  ]
                                }
                              },
                              "required": [
                                "value",
                                "label"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "integer",
                                  "enum": [
                                    1
                                  ]
                                },
                                "label": {
                                  "type": "string",
                                  "enum": [
                                    "Tarde"
                                  ]
                                }
                              },
                              "required": [
                                "value",
                                "label"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "integer",
                                  "enum": [
                                    2
                                  ]
                                },
                                "label": {
                                  "type": "string",
                                  "enum": [
                                    "Noche"
                                  ]
                                }
                              },
                              "required": [
                                "value",
                                "label"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "integer",
                                  "enum": [
                                    3
                                  ]
                                },
                                "label": {
                                  "type": "string",
                                  "enum": [
                                    "Fin de semana"
                                  ]
                                }
                              },
                              "required": [
                                "value",
                                "label"
                              ]
                            }
                          ],
                          "minItems": 4,
                          "maxItems": 4,
                          "additionalItems": false
                        },
                        "sedes": {
                          "type": "string"
                        },
                        "modulos": {
                          "type": "string"
                        },
                        "profesores": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "status_options",
                        "jornada_options",
                        "sedes",
                        "modulos",
                        "profesores"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/academico/grupos/statistics": {
      "get": {
        "operationId": "grupos.statistics",
        "summary": "Obtiene estadísticas de grupos",
        "tags": [
          "Grupo"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "totales": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string"
                            },
                            "activos": {
                              "type": "string"
                            },
                            "eliminados": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total",
                            "activos",
                            "eliminados"
                          ]
                        },
                        "por_status": {
                          "type": "object",
                          "properties": {
                            "activos": {
                              "type": "string"
                            },
                            "inactivos": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "activos",
                            "inactivos"
                          ]
                        },
                        "por_jornada": {
                          "type": "object",
                          "properties": {
                            "manana": {
                              "type": "string"
                            },
                            "tarde": {
                              "type": "string"
                            },
                            "noche": {
                              "type": "string"
                            },
                            "fin_semana": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "manana",
                            "tarde",
                            "noche",
                            "fin_semana"
                          ]
                        },
                        "por_inscritos": {
                          "type": "object",
                          "properties": {
                            "pocos": {
                              "type": "string"
                            },
                            "medios": {
                              "type": "string"
                            },
                            "muchos": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "pocos",
                            "medios",
                            "muchos"
                          ]
                        },
                        "total_inscritos": {
                          "type": "string"
                        },
                        "promedio_inscritos": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "totales",
                        "por_status",
                        "por_jornada",
                        "por_inscritos",
                        "total_inscritos",
                        "promedio_inscritos"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/academico/grupos/{grupo}/horarios": {
      "get": {
        "operationId": "grupos.horarios.index",
        "summary": "Obtiene los horarios de un grupo específico",
        "tags": [
          "Grupo"
        ],
        "parameters": [
          {
            "name": "grupo",
            "in": "path",
            "required": true,
            "description": "The grupo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "post": {
        "operationId": "grupos.horarios.store",
        "summary": "Asigna horarios a un grupo específico",
        "tags": [
          "Grupo"
        ],
        "parameters": [
          {
            "name": "grupo",
            "in": "path",
            "required": true,
            "description": "The grupo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreGrupoHorarioRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Horarios asignados exitosamente al grupo."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/GrupoResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Error al asignar horarios al grupo."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "grupos.horarios.update",
        "summary": "Actualiza los horarios de un grupo específico",
        "tags": [
          "Grupo"
        ],
        "parameters": [
          {
            "name": "grupo",
            "in": "path",
            "required": true,
            "description": "The grupo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGrupoHorarioRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Horarios del grupo actualizados exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/GrupoResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Error al actualizar horarios del grupo."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "grupos.horarios.destroy",
        "summary": "Elimina todos los horarios de un grupo específico",
        "tags": [
          "Grupo"
        ],
        "parameters": [
          {
            "name": "grupo",
            "in": "path",
            "required": true,
            "description": "The grupo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Horarios del grupo eliminados exitosamente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Error al eliminar horarios del grupo."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/academico/grupos/{grupo}/horarios/estadisticas": {
      "get": {
        "operationId": "grupos.horarios.statistics",
        "summary": "Obtiene estadísticas de horarios de un grupo específico",
        "tags": [
          "Grupo"
        ],
        "parameters": [
          {
            "name": "grupo",
            "in": "path",
            "required": true,
            "description": "The grupo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "total_horarios": {
                          "type": "string"
                        },
                        "total_horas_semana": {
                          "type": "string"
                        },
                        "dias_clase": {
                          "type": "string"
                        },
                        "horarios_por_dia": {
                          "type": "string"
                        },
                        "areas_utilizadas": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "total_horarios",
                        "total_horas_semana",
                        "dias_clase",
                        "horarios_por_dia",
                        "areas_utilizadas"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/configuracion/horarios": {
      "get": {
        "operationId": "horarios.index",
        "description": "Permite filtrar horarios por sede, área, día, tipo, período y estado.\nSoporta paginación y ordenamiento personalizado.\nPuede incluir relaciones con sede y área.",
        "summary": "Muestra una lista de los horarios",
        "tags": [
          "Horario"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/HorarioResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "horarios.store",
        "description": "Crea un nuevo registro de horario con los datos proporcionados.\nEl horario se crea con estado activo por defecto.\nIncluye validación de datos mediante StoreHorarioRequest.",
        "summary": "Almacena un nuevo horario en la base de datos",
        "tags": [
          "Horario"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreHorarioRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Horario creado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/HorarioResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/configuracion/horarios/{horario}": {
      "get": {
        "operationId": "horarios.show",
        "description": "Obtiene los detalles de un horario específico.\nPuede incluir relaciones con sede y área.",
        "summary": "Muestra el horario especificado",
        "tags": [
          "Horario"
        ],
        "parameters": [
          {
            "name": "horario",
            "in": "path",
            "required": true,
            "description": "Horario a mostrar",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/HorarioResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "horarios.update",
        "description": "Modifica los datos de un horario existente.\nIncluye validación de datos mediante UpdateHorarioRequest.\nNo permite modificar el estado (status) directamente.",
        "summary": "Actualiza el horario especificado en la base de datos",
        "tags": [
          "Horario"
        ],
        "parameters": [
          {
            "name": "horario",
            "in": "path",
            "required": true,
            "description": "Horario a actualizar",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHorarioRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Horario actualizado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/HorarioResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "horarios.destroy",
        "summary": "Elimina el horario especificado de la base de datos (soft delete)",
        "tags": [
          "Horario"
        ],
        "parameters": [
          {
            "name": "horario",
            "in": "path",
            "required": true,
            "description": "The horario ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Soft delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Horario eliminado exitosamente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/configuracion/horarios/restore/{id}": {
      "post": {
        "operationId": "horarios.restore",
        "summary": "Restaura un horario eliminado (soft delete)",
        "tags": [
          "Horario"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Horario restaurado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/HorarioResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/configuracion/horarios/force/{id}": {
      "delete": {
        "operationId": "horarios.force-delete",
        "summary": "Elimina permanentemente un horario",
        "tags": [
          "Horario"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Horario eliminado permanentemente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/configuracion/horarios/trashed": {
      "get": {
        "operationId": "horarios.trashed",
        "summary": "Obtiene solo los horarios eliminados (soft delete)",
        "tags": [
          "Horario"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/HorarioResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/configuracion/horarios/filters/options": {
      "get": {
        "operationId": "horarios.filters",
        "description": "Proporciona las opciones disponibles para filtrar horarios.\nIncluye listas de sedes, áreas, días de la semana, tipos y períodos.",
        "summary": "Obtiene las opciones de filtros disponibles",
        "tags": [
          "Horario"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "sedes": {
                          "type": "string"
                        },
                        "areas": {
                          "type": "string"
                        },
                        "dias": {
                          "type": "object",
                          "properties": {
                            "lunes": {
                              "type": "string",
                              "enum": [
                                "Lunes"
                              ]
                            },
                            "martes": {
                              "type": "string",
                              "enum": [
                                "Martes"
                              ]
                            },
                            "miércoles": {
                              "type": "string",
                              "enum": [
                                "Miércoles"
                              ]
                            },
                            "jueves": {
                              "type": "string",
                              "enum": [
                                "Jueves"
                              ]
                            },
                            "viernes": {
                              "type": "string",
                              "enum": [
                                "Viernes"
                              ]
                            },
                            "sábado": {
                              "type": "string",
                              "enum": [
                                "Sábado"
                              ]
                            },
                            "domingo": {
                              "type": "string",
                              "enum": [
                                "Domingo"
                              ]
                            }
                          },
                          "required": [
                            "lunes",
                            "martes",
                            "miércoles",
                            "jueves",
                            "viernes",
                            "sábado",
                            "domingo"
                          ]
                        },
                        "tipos": {
                          "type": "array",
                          "prefixItems": [
                            {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "boolean"
                                },
                                "label": {
                                  "type": "string",
                                  "enum": [
                                    "Horario de Sede"
                                  ]
                                }
                              },
                              "required": [
                                "value",
                                "label"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "boolean"
                                },
                                "label": {
                                  "type": "string",
                                  "enum": [
                                    "Horario de Grupo"
                                  ]
                                }
                              },
                              "required": [
                                "value",
                                "label"
                              ]
                            }
                          ],
                          "minItems": 2,
                          "maxItems": 2,
                          "additionalItems": false
                        },
                        "periodos": {
                          "type": "array",
                          "prefixItems": [
                            {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "boolean"
                                },
                                "label": {
                                  "type": "string",
                                  "enum": [
                                    "Inicio"
                                  ]
                                }
                              },
                              "required": [
                                "value",
                                "label"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "boolean"
                                },
                                "label": {
                                  "type": "string",
                                  "enum": [
                                    "Fin"
                                  ]
                                }
                              },
                              "required": [
                                "value",
                                "label"
                              ]
                            }
                          ],
                          "minItems": 2,
                          "maxItems": 2,
                          "additionalItems": false
                        }
                      },
                      "required": [
                        "sedes",
                        "areas",
                        "dias",
                        "tipos",
                        "periodos"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/configuracion/horarios/statistics": {
      "get": {
        "operationId": "horarios.statistics",
        "description": "Proporciona estadísticas detalladas sobre los horarios registrados.\nIncluye totales, distribución por sede, día y tipo.",
        "summary": "Obtiene estadísticas de horarios",
        "tags": [
          "Horario"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "totales": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string"
                            },
                            "activos": {
                              "type": "string"
                            },
                            "eliminados": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total",
                            "activos",
                            "eliminados"
                          ]
                        },
                        "por_sede": {
                          "type": "string"
                        },
                        "por_dia": {
                          "type": "string"
                        },
                        "por_tipo": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "totales",
                        "por_sede",
                        "por_dia",
                        "por_tipo"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/dashboard/kpis": {
      "get": {
        "operationId": "kpis.index",
        "summary": "Obtiene una lista paginada de KPIs",
        "tags": [
          "Kpi"
        ],
        "parameters": [
          {
            "name": "is_active",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of `KpiResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/KpiResource"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "kpis.store",
        "summary": "Crea un nuevo KPI",
        "tags": [
          "Kpi"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreKpiRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "`KpiResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/KpiResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/dashboard/kpis/{id}": {
      "get": {
        "operationId": "kpis.show",
        "summary": "Obtiene un KPI específico",
        "tags": [
          "Kpi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del KPI",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`KpiResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/KpiResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "kpis.update",
        "summary": "Actualiza un KPI existente",
        "tags": [
          "Kpi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del KPI",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateKpiRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`KpiResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/KpiResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "kpis.destroy",
        "summary": "Elimina un KPI",
        "tags": [
          "Kpi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del KPI",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "KPI eliminado exitosamente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/dashboard/kpi-fields": {
      "get": {
        "operationId": "kpi-fields.index",
        "summary": "Obtiene una lista paginada de campos de KPI",
        "tags": [
          "KpiField"
        ],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of `KpiFieldResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/KpiFieldResource"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "kpi-fields.store",
        "summary": "Crea un nuevo campo de KPI",
        "tags": [
          "KpiField"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreKpiFieldRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "`KpiFieldResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/KpiFieldResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/dashboard/kpi-fields/{id}": {
      "get": {
        "operationId": "kpi-fields.show",
        "summary": "Obtiene un campo de KPI específico",
        "tags": [
          "KpiField"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del campo",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`KpiFieldResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/KpiFieldResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "kpi-fields.update",
        "summary": "Actualiza un campo de KPI existente",
        "tags": [
          "KpiField"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del campo",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateKpiFieldRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`KpiFieldResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/KpiFieldResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "kpi-fields.destroy",
        "summary": "Elimina un campo de KPI",
        "tags": [
          "KpiField"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del campo",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Campo de KPI eliminado exitosamente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/dashboard/kpis/{kpiId}/field-relations": {
      "get": {
        "operationId": "kpiFieldRelation.index",
        "summary": "Obtiene las relaciones de campos de un KPI específico",
        "tags": [
          "KpiFieldRelation"
        ],
        "parameters": [
          {
            "name": "kpiId",
            "in": "path",
            "required": true,
            "description": "ID del KPI",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of `KpiFieldRelationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/KpiFieldRelationResource"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "kpiFieldRelation.store",
        "summary": "Crea una nueva relación entre campos",
        "tags": [
          "KpiFieldRelation"
        ],
        "parameters": [
          {
            "name": "kpiId",
            "in": "path",
            "required": true,
            "description": "ID del KPI",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreKpiFieldRelationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "`KpiFieldRelationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/KpiFieldRelationResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/dashboard/kpis/{kpiId}/field-relations/{relationId}": {
      "get": {
        "operationId": "kpiFieldRelation.show",
        "summary": "Obtiene una relación específica",
        "tags": [
          "KpiFieldRelation"
        ],
        "parameters": [
          {
            "name": "kpiId",
            "in": "path",
            "required": true,
            "description": "ID del KPI",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "relationId",
            "in": "path",
            "required": true,
            "description": "ID de la relación",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`KpiFieldRelationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/KpiFieldRelationResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "kpiFieldRelation.update",
        "summary": "Actualiza una relación existente",
        "tags": [
          "KpiFieldRelation"
        ],
        "parameters": [
          {
            "name": "kpiId",
            "in": "path",
            "required": true,
            "description": "ID del KPI",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "relationId",
            "in": "path",
            "required": true,
            "description": "ID de la relación",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateKpiFieldRelationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`KpiFieldRelationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/KpiFieldRelationResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "kpiFieldRelation.destroy",
        "summary": "Elimina una relación",
        "tags": [
          "KpiFieldRelation"
        ],
        "parameters": [
          {
            "name": "kpiId",
            "in": "path",
            "required": true,
            "description": "ID del KPI",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "relationId",
            "in": "path",
            "required": true,
            "description": "ID de la relación",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Relación eliminada exitosamente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/dashboard/field-relations/operations": {
      "get": {
        "operationId": "kpiFieldRelation.availableOperations",
        "summary": "Obtiene las operaciones disponibles para relaciones",
        "tags": [
          "KpiFieldRelation"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operations": {
                      "type": "object",
                      "properties": {
                        "divide": {
                          "type": "string",
                          "enum": [
                            "División (A / B)"
                          ]
                        },
                        "multiply": {
                          "type": "string",
                          "enum": [
                            "Multiplicación (A * B)"
                          ]
                        },
                        "add": {
                          "type": "string",
                          "enum": [
                            "Suma (A + B)"
                          ]
                        },
                        "subtract": {
                          "type": "string",
                          "enum": [
                            "Resta (A - B)"
                          ]
                        },
                        "percentage": {
                          "type": "string",
                          "enum": [
                            "Porcentaje ((A / B) * 100)"
                          ]
                        }
                      },
                      "required": [
                        "divide",
                        "multiply",
                        "add",
                        "subtract",
                        "percentage"
                      ]
                    }
                  },
                  "required": [
                    "operations"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/dashboard/kpi-metadata/models": {
      "get": {
        "operationId": "kpiMetadata.getModels",
        "summary": "Obtiene la lista de modelos disponibles para KPIs",
        "tags": [
          "KpiMetadata"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "Error interno del servidor"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/kpi-metadata/models/{modelId}/fields": {
      "get": {
        "operationId": "kpiMetadata.getFields",
        "summary": "Obtiene los campos disponibles de un modelo específico",
        "tags": [
          "KpiMetadata"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "description": "ID del modelo",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of `FieldMetadataResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FieldMetadataResource"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "Modelo no permitido o no encontrado."
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/kpis/available": {
      "get": {
        "operationId": "kpiMetadata.getAvailableKpis",
        "summary": "Obtiene los KPIs disponibles (alias para getModels).\nMantiene compatibilidad con la ruta anterior",
        "tags": [
          "KpiMetadata"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "Error interno del servidor"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/academico/modulos": {
      "get": {
        "operationId": "modulos.index",
        "summary": "Muestra una lista de los módulos",
        "tags": [
          "Modulo"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ModuloResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "modulos.store",
        "summary": "Almacena un nuevo módulo en la base de datos",
        "tags": [
          "Modulo"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreModuloRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Módulo creado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/ModuloResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/academico/modulos/{modulo}": {
      "get": {
        "operationId": "modulos.show",
        "summary": "Muestra el módulo especificado",
        "tags": [
          "Modulo"
        ],
        "parameters": [
          {
            "name": "modulo",
            "in": "path",
            "required": true,
            "description": "The modulo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ModuloResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "modulos.update",
        "summary": "Actualiza el módulo especificado en la base de datos",
        "tags": [
          "Modulo"
        ],
        "parameters": [
          {
            "name": "modulo",
            "in": "path",
            "required": true,
            "description": "The modulo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModuloRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Módulo actualizado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/ModuloResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "modulos.destroy",
        "summary": "Elimina el módulo especificado de la base de datos (soft delete)",
        "tags": [
          "Modulo"
        ],
        "parameters": [
          {
            "name": "modulo",
            "in": "path",
            "required": true,
            "description": "The modulo ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Soft delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Módulo eliminado exitosamente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "No se puede eliminar el módulo porque tiene grupos asociados."
                          ]
                        }
                      },
                      "required": [
                        "message"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "No se puede eliminar el módulo porque tiene cursos asociados."
                          ]
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/academico/modulos/{id}/restore": {
      "post": {
        "operationId": "modulos.restore",
        "summary": "Restaura un módulo eliminado (soft delete)",
        "tags": [
          "Modulo"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Módulo restaurado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/ModuloResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/academico/modulos/{id}/force-delete": {
      "delete": {
        "operationId": "modulos.force-delete",
        "summary": "Elimina permanentemente un módulo",
        "tags": [
          "Modulo"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Módulo eliminado permanentemente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "No se puede eliminar permanentemente el módulo porque tiene grupos asociados."
                          ]
                        }
                      },
                      "required": [
                        "message"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "No se puede eliminar permanentemente el módulo porque tiene cursos asociados."
                          ]
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/academico/modulos/trashed": {
      "get": {
        "operationId": "modulos.trashed",
        "summary": "Obtiene solo los módulos eliminados (soft delete)",
        "tags": [
          "Modulo"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ModuloResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/academico/modulos/filters": {
      "get": {
        "operationId": "modulos.filters",
        "summary": "Obtiene las opciones de filtros disponibles",
        "tags": [
          "Modulo"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status_options": {
                          "type": "array",
                          "prefixItems": [
                            {
                              "type": "string",
                              "enum": [
                                "Inactivo"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "Activo"
                              ]
                            }
                          ],
                          "minItems": 2,
                          "maxItems": 2,
                          "additionalItems": false
                        },
                        "modulos": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "status_options",
                        "modulos"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/academico/modulos/statistics": {
      "get": {
        "operationId": "modulos.statistics",
        "summary": "Obtiene estadísticas de módulos",
        "tags": [
          "Modulo"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "totales": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string"
                            },
                            "activos": {
                              "type": "string"
                            },
                            "eliminados": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total",
                            "activos",
                            "eliminados"
                          ]
                        },
                        "por_status": {
                          "type": "object",
                          "properties": {
                            "activos": {
                              "type": "string"
                            },
                            "inactivos": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "activos",
                            "inactivos"
                          ]
                        },
                        "con_cursos": {
                          "type": "string"
                        },
                        "con_grupos": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "totales",
                        "por_status",
                        "con_cursos",
                        "con_grupos"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/configuracion/poblaciones": {
      "get": {
        "operationId": "poblaciones.index",
        "summary": "Muestra una lista de las poblaciones",
        "tags": [
          "Poblacion"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PoblacionResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/configuracion/poblaciones/{poblacion}": {
      "get": {
        "operationId": "poblaciones.show",
        "summary": "Muestra la población especificada",
        "tags": [
          "Poblacion"
        ],
        "parameters": [
          {
            "name": "poblacion",
            "in": "path",
            "required": true,
            "description": "The poblacion ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PoblacionResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/configuracion/poblaciones/filters/options": {
      "get": {
        "operationId": "poblaciones.filters",
        "summary": "Obtiene las opciones de filtros disponibles",
        "tags": [
          "Poblacion"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "paises": {
                          "type": "string"
                        },
                        "provincias": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "paises",
                        "provincias"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/configuracion/poblaciones/statistics": {
      "get": {
        "operationId": "poblaciones.statistics",
        "summary": "Obtiene estadísticas de poblaciones",
        "tags": [
          "Poblacion"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "totales": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total"
                          ]
                        },
                        "por_pais": {
                          "type": "string"
                        },
                        "por_provincia": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "totales",
                        "por_pais",
                        "por_provincia"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/crm/referidos": {
      "get": {
        "operationId": "referidos.index",
        "summary": "Muestra una lista de los referidos",
        "tags": [
          "Referido"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReferidoResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "referidos.store",
        "summary": "Almacena un nuevo referido en la base de datos",
        "tags": [
          "Referido"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreReferidoRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Referido creado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/ReferidoResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/crm/referidos/{referido}": {
      "get": {
        "operationId": "referidos.show",
        "summary": "Muestra el referido especificado",
        "tags": [
          "Referido"
        ],
        "parameters": [
          {
            "name": "referido",
            "in": "path",
            "required": true,
            "description": "The referido ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReferidoResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "referidos.update",
        "summary": "Actualiza el referido especificado en la base de datos",
        "tags": [
          "Referido"
        ],
        "parameters": [
          {
            "name": "referido",
            "in": "path",
            "required": true,
            "description": "The referido ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReferidoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Referido actualizado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/ReferidoResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "referidos.destroy",
        "summary": "Elimina el referido especificado de la base de datos (soft delete)",
        "tags": [
          "Referido"
        ],
        "parameters": [
          {
            "name": "referido",
            "in": "path",
            "required": true,
            "description": "The referido ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Soft delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Referido eliminado exitosamente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "No se puede eliminar el referido porque tiene seguimientos asociados."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/crm/referidos/{id}/restore": {
      "post": {
        "operationId": "referidos.restore",
        "summary": "Restaura un referido eliminado (soft delete)",
        "tags": [
          "Referido"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Referido restaurado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/ReferidoResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/crm/referidos/{id}/force-delete": {
      "delete": {
        "operationId": "referidos.force-delete",
        "summary": "Elimina permanentemente un referido",
        "tags": [
          "Referido"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Referido eliminado permanentemente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "No se puede eliminar permanentemente el referido porque tiene seguimientos asociados."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/crm/referidos/trashed/list": {
      "get": {
        "operationId": "referidos.trashed",
        "summary": "Obtiene solo los referidos eliminados (soft delete)",
        "tags": [
          "Referido"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReferidoResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/crm/referidos/filters/options": {
      "get": {
        "operationId": "referidos.filters",
        "summary": "Obtiene las opciones de filtros disponibles",
        "tags": [
          "Referido"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status_options": {
                          "type": "array",
                          "prefixItems": [
                            {
                              "type": "string",
                              "enum": [
                                "Creado"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "Interesado"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "Pendiente por matricular"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "Matriculado"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "Declinado"
                              ]
                            }
                          ],
                          "minItems": 5,
                          "maxItems": 5,
                          "additionalItems": false
                        },
                        "ciudades": {
                          "type": "string"
                        },
                        "cursos": {
                          "type": "string"
                        },
                        "gestores": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "status_options",
                        "ciudades",
                        "cursos",
                        "gestores"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/crm/referidos/statistics": {
      "get": {
        "operationId": "referidos.statistics",
        "summary": "Obtiene estadísticas de referidos",
        "tags": [
          "Referido"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "totales": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string"
                            },
                            "activos": {
                              "type": "string"
                            },
                            "eliminados": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total",
                            "activos",
                            "eliminados"
                          ]
                        },
                        "por_status": {
                          "type": "object",
                          "properties": {
                            "creados": {
                              "type": "string"
                            },
                            "interesados": {
                              "type": "string"
                            },
                            "pendientes": {
                              "type": "string"
                            },
                            "matriculados": {
                              "type": "string"
                            },
                            "declinados": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "creados",
                            "interesados",
                            "pendientes",
                            "matriculados",
                            "declinados"
                          ]
                        },
                        "por_ciudad": {
                          "type": "string"
                        },
                        "por_curso": {
                          "type": "string"
                        },
                        "por_gestor": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "totales",
                        "por_status",
                        "por_ciudad",
                        "por_curso",
                        "por_gestor"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/configuracion/sedes": {
      "get": {
        "operationId": "sedes.index",
        "summary": "Muestra una lista de las sedes",
        "tags": [
          "Sede"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SedeResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "sedes.store",
        "summary": "Almacena una nueva sede en la base de datos",
        "tags": [
          "Sede"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreSedeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Sede creada exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/SedeResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/configuracion/sedes/{sede}": {
      "get": {
        "operationId": "sedes.show",
        "summary": "Muestra la sede especificada",
        "tags": [
          "Sede"
        ],
        "parameters": [
          {
            "name": "sede",
            "in": "path",
            "required": true,
            "description": "The sede ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SedeResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "sedes.update",
        "summary": "Actualiza la sede especificada en la base de datos",
        "tags": [
          "Sede"
        ],
        "parameters": [
          {
            "name": "sede",
            "in": "path",
            "required": true,
            "description": "The sede ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSedeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Sede actualizada exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/SedeResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "sedes.destroy",
        "summary": "Elimina la sede especificada de la base de datos (soft delete)",
        "tags": [
          "Sede"
        ],
        "parameters": [
          {
            "name": "sede",
            "in": "path",
            "required": true,
            "description": "The sede ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Soft delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Sede eliminada exitosamente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "No se puede eliminar la sede porque tiene grupos asociados."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/configuracion/sedes/restore/{id}": {
      "post": {
        "operationId": "sedes.restore",
        "summary": "Restaura una sede eliminada (soft delete)",
        "tags": [
          "Sede"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Sede restaurada exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/SedeResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/configuracion/sedes/force/{id}": {
      "delete": {
        "operationId": "sedes.force-delete",
        "summary": "Elimina permanentemente una sede",
        "tags": [
          "Sede"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Sede eliminada permanentemente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "No se puede eliminar permanentemente la sede porque tiene grupos asociados."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/configuracion/sedes/trashed": {
      "get": {
        "operationId": "sedes.trashed",
        "summary": "Obtiene solo las sedes eliminadas (soft delete)",
        "tags": [
          "Sede"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SedeResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/configuracion/sedes/filters/options": {
      "get": {
        "operationId": "sedes.filters",
        "summary": "Obtiene las opciones de filtros disponibles",
        "tags": [
          "Sede"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "poblaciones": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "poblaciones"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/configuracion/sedes/statistics": {
      "get": {
        "operationId": "sedes.statistics",
        "summary": "Obtiene estadísticas de sedes",
        "tags": [
          "Sede"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "totales": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string"
                            },
                            "activos": {
                              "type": "string"
                            },
                            "eliminados": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total",
                            "activos",
                            "eliminados"
                          ]
                        },
                        "por_poblacion": {
                          "type": "string"
                        },
                        "con_grupos": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "totales",
                        "por_poblacion",
                        "con_grupos"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/crm/seguimientos": {
      "get": {
        "operationId": "seguimientos.index",
        "summary": "Muestra una lista de los seguimientos",
        "tags": [
          "Seguimiento"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "fecha"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "desc"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SeguimientoResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "seguimientos.store",
        "summary": "Crea un nuevo seguimiento en el sistema",
        "tags": [
          "Seguimiento"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreSeguimientoRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Seguimiento creado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/SeguimientoResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/crm/seguimientos/{seguimiento}": {
      "get": {
        "operationId": "seguimientos.show",
        "summary": "Muestra un seguimiento específico con sus relaciones",
        "tags": [
          "Seguimiento"
        ],
        "parameters": [
          {
            "name": "seguimiento",
            "in": "path",
            "required": true,
            "description": "The seguimiento ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SeguimientoResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "seguimientos.update",
        "summary": "Actualiza un seguimiento existente",
        "tags": [
          "Seguimiento"
        ],
        "parameters": [
          {
            "name": "seguimiento",
            "in": "path",
            "required": true,
            "description": "The seguimiento ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSeguimientoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Seguimiento actualizado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/SeguimientoResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "seguimientos.destroy",
        "summary": "Elimina un seguimiento (soft delete)",
        "tags": [
          "Seguimiento"
        ],
        "parameters": [
          {
            "name": "seguimiento",
            "in": "path",
            "required": true,
            "description": "The seguimiento ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Soft delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Seguimiento eliminado exitosamente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/crm/seguimientos/{id}/restore": {
      "post": {
        "operationId": "seguimientos.restore",
        "summary": "Restaura un seguimiento eliminado (soft delete)",
        "tags": [
          "Seguimiento"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del seguimiento a restaurar",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Seguimiento restaurado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/SeguimientoResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/crm/seguimientos/{id}/force-delete": {
      "delete": {
        "operationId": "seguimientos.force-delete",
        "summary": "Elimina permanentemente un seguimiento",
        "tags": [
          "Seguimiento"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del seguimiento a eliminar permanentemente",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Seguimiento eliminado permanentemente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/crm/seguimientos/by-referido/{referidoId}": {
      "get": {
        "operationId": "seguimientos.by-referido",
        "summary": "Obtiene todos los seguimientos de un referido específico",
        "tags": [
          "Seguimiento"
        ],
        "parameters": [
          {
            "name": "referidoId",
            "in": "path",
            "required": true,
            "description": "ID del referido",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "fecha"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "desc"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SeguimientoResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/crm/seguimientos/by-seguidor/{seguidorId}": {
      "get": {
        "operationId": "seguimientos.by-seguidor",
        "summary": "Obtiene todos los seguimientos realizados por un seguidor específico",
        "tags": [
          "Seguimiento"
        ],
        "parameters": [
          {
            "name": "seguidorId",
            "in": "path",
            "required": true,
            "description": "ID del seguidor",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "fecha"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "desc"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SeguimientoResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/academico/topicos": {
      "get": {
        "operationId": "topicos.index",
        "summary": "Muestra una lista de los tópicos",
        "tags": [
          "Topico"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TopicoResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "topicos.store",
        "summary": "Almacena un nuevo tópico en la base de datos",
        "tags": [
          "Topico"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreTopicoRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Tópico creado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/TopicoResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/academico/topicos/{topico}": {
      "get": {
        "operationId": "topicos.show",
        "summary": "Muestra el tópico especificado",
        "tags": [
          "Topico"
        ],
        "parameters": [
          {
            "name": "topico",
            "in": "path",
            "required": true,
            "description": "The topico ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TopicoResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "topicos.update",
        "summary": "Actualiza el tópico especificado en la base de datos",
        "tags": [
          "Topico"
        ],
        "parameters": [
          {
            "name": "topico",
            "in": "path",
            "required": true,
            "description": "The topico ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTopicoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Tópico actualizado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/TopicoResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "topicos.destroy",
        "summary": "Elimina el tópico especificado de la base de datos (soft delete)",
        "tags": [
          "Topico"
        ],
        "parameters": [
          {
            "name": "topico",
            "in": "path",
            "required": true,
            "description": "The topico ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Soft delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Tópico eliminado exitosamente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "No se puede eliminar el tópico porque tiene módulos asociados."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/academico/topicos/{id}/restore": {
      "post": {
        "operationId": "topicos.restore",
        "summary": "Restaura un tópico eliminado (soft delete)",
        "tags": [
          "Topico"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Tópico restaurado exitosamente."
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/TopicoResource"
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/academico/topicos/{id}/force-delete": {
      "delete": {
        "operationId": "topicos.force-delete",
        "summary": "Elimina permanentemente un tópico",
        "tags": [
          "Topico"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Tópico eliminado permanentemente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "No se puede eliminar permanentemente el tópico porque tiene módulos asociados."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/academico/topicos/trashed": {
      "get": {
        "operationId": "topicos.trashed",
        "summary": "Obtiene solo los tópicos eliminados (soft delete)",
        "tags": [
          "Topico"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TopicoResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "last_page",
                        "per_page",
                        "total",
                        "from",
                        "to"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/academico/topicos/filters": {
      "get": {
        "operationId": "topicos.filters",
        "summary": "Obtiene las opciones de filtros disponibles",
        "tags": [
          "Topico"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status_options": {
                          "type": "array",
                          "prefixItems": [
                            {
                              "type": "string",
                              "enum": [
                                "Inactivo"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "Activo"
                              ]
                            }
                          ],
                          "minItems": 2,
                          "maxItems": 2,
                          "additionalItems": false
                        },
                        "topicos": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "status_options",
                        "topicos"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/academico/topicos/statistics": {
      "get": {
        "operationId": "topicos.statistics",
        "summary": "Obtiene estadísticas de tópicos",
        "tags": [
          "Topico"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "totales": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string"
                            },
                            "activos": {
                              "type": "string"
                            },
                            "eliminados": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total",
                            "activos",
                            "eliminados"
                          ]
                        },
                        "por_status": {
                          "type": "object",
                          "properties": {
                            "activos": {
                              "type": "string"
                            },
                            "inactivos": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "activos",
                            "inactivos"
                          ]
                        },
                        "con_modulos": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "totales",
                        "por_status",
                        "con_modulos"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/translations/messages": {
      "get": {
        "operationId": "translation.getMessages",
        "summary": "Obtener mensajes de la API en el idioma actual",
        "tags": [
          "Translation"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "created": {
                          "type": "string"
                        },
                        "updated": {
                          "type": "string"
                        },
                        "deleted": {
                          "type": "string"
                        },
                        "retrieved": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "created",
                        "updated",
                        "deleted",
                        "retrieved"
                      ]
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "not_found": {
                          "type": "string"
                        },
                        "unauthorized": {
                          "type": "string"
                        },
                        "forbidden": {
                          "type": "string"
                        },
                        "validation_failed": {
                          "type": "string"
                        },
                        "server_error": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "not_found",
                        "unauthorized",
                        "forbidden",
                        "validation_failed",
                        "server_error"
                      ]
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "registered": {
                          "type": "string"
                        },
                        "logged_in": {
                          "type": "string"
                        },
                        "logged_out": {
                          "type": "string"
                        },
                        "profile_updated": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "registered",
                        "logged_in",
                        "logged_out",
                        "profile_updated"
                      ]
                    },
                    "locale": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "error",
                    "user",
                    "locale"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/translations/locale": {
      "post": {
        "operationId": "translation.setLocale",
        "summary": "Cambiar el idioma de la aplicación",
        "tags": [
          "Translation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "locale": {
                    "type": "string",
                    "default": "es"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Idioma cambiado exitosamente"
                      ]
                    },
                    "locale": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "locale",
                    "success"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "locale": {
                          "type": "string",
                          "enum": [
                            "Idioma no soportado"
                          ]
                        }
                      },
                      "required": [
                        "locale"
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "errors",
                    "success"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/translations/validate-example": {
      "post": {
        "operationId": "translation.validateExample",
        "summary": "Ejemplo de uso de traducciones en validaciones",
        "tags": [
          "Translation"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8
                  },
                  "password_confirmation": {
                    "type": "string",
                    "minLength": 8
                  }
                },
                "required": [
                  "name",
                  "email",
                  "password",
                  "password_confirmation"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "data",
                    "success"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/translations/timezone": {
      "get": {
        "operationId": "translation.getTimezoneInfo",
        "summary": "Obtener información de zona horaria",
        "tags": [
          "Translation"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timezone": {
                      "type": "string"
                    },
                    "current_time": {
                      "type": "string"
                    },
                    "current_timestamp": {
                      "type": "string"
                    },
                    "locale": {
                      "type": "string"
                    },
                    "formatted_date": {
                      "type": "string"
                    },
                    "day_name": {
                      "type": "string"
                    },
                    "month_name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "timezone",
                    "current_time",
                    "current_timestamp",
                    "locale",
                    "formatted_date",
                    "day_name",
                    "month_name"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/configuracion/users": {
      "get": {
        "operationId": "users.index",
        "summary": "Mostrar una lista de usuarios",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated set of `UserResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserResource"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "last": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "prev": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "next": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ]
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "from": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "last_page": {
                          "type": "integer"
                        },
                        "links": {
                          "type": "array",
                          "description": "Generated paginator links.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "label": {
                                "type": "string"
                              },
                              "active": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "url",
                              "label",
                              "active"
                            ]
                          }
                        },
                        "path": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Base path for paginator generated URLs."
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "Number of items shown per page."
                        },
                        "to": {
                          "type": [
                            "integer",
                            "null"
                          ],
                          "description": "Number of the last item in the slice."
                        },
                        "total": {
                          "type": "integer",
                          "description": "Total number of items being paginated."
                        }
                      },
                      "required": [
                        "current_page",
                        "from",
                        "last_page",
                        "links",
                        "path",
                        "per_page",
                        "to",
                        "total"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "links",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Error al obtener los usuarios"
                      ]
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "users.store",
        "summary": "Almacenar un usuario recién creado en el almacenamiento",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "`UserResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/configuracion/users/{user}": {
      "get": {
        "operationId": "users.show",
        "summary": "Mostrar el usuario especificado",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "description": "The user ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`UserResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "users.update",
        "summary": "Actualizar el usuario especificado en el almacenamiento",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "description": "The user ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`UserResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "users.destroy",
        "summary": "Inactivar el usuario especificado",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "description": "The user ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Esto establecerá 'deleted_at'",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Usuario inactivado exitosamente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "El usuario ya está inactivo."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "No se puede eliminar el usuario porque tiene relaciones asociadas (grupos, cursos, gestores, agendadores o seguimientos)."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/configuracion/users/restore/{id}": {
      "post": {
        "operationId": "user.restore",
        "summary": "Restaurar el usuario especificado",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Esto establecerá 'deleted_at' a null",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Usuario restaurado exitosamente."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/configuracion/users/force/{id}": {
      "delete": {
        "operationId": "users.force-delete",
        "summary": "Eliminar permanentemente el usuario especificado",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Elimina permanentemente\n\n\n\nNo content"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "No se puede eliminar permanentemente el usuario porque tiene relaciones asociadas (grupos, cursos, gestores, agendadores o seguimientos)."
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/configuracion/users/filters": {
      "get": {
        "operationId": "users.filters",
        "summary": "Obtiene las opciones de filtros disponibles",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "roles": {
                          "type": "string"
                        },
                        "profesores": {
                          "type": "string"
                        },
                        "cursos": {
                          "type": "string"
                        },
                        "gestores": {
                          "type": "string"
                        },
                        "agendadores": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "roles",
                        "profesores",
                        "cursos",
                        "gestores",
                        "agendadores"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/configuracion/users/statistics": {
      "get": {
        "operationId": "users.statistics",
        "summary": "Obtiene estadísticas de usuarios",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "totales": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string"
                            },
                            "activos": {
                              "type": "string"
                            },
                            "eliminados": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total",
                            "activos",
                            "eliminados"
                          ]
                        },
                        "por_rol": {
                          "type": "string"
                        },
                        "con_grupos": {
                          "type": "string"
                        },
                        "con_cursos": {
                          "type": "string"
                        },
                        "con_gestores": {
                          "type": "string"
                        },
                        "con_agendadores": {
                          "type": "string"
                        },
                        "con_seguimientos": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "totales",
                        "por_rol",
                        "con_grupos",
                        "con_cursos",
                        "con_gestores",
                        "con_agendadores",
                        "con_seguimientos"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AgendaResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "referido_id": {
            "type": "string"
          },
          "agendador_id": {
            "type": "string"
          },
          "fecha": {
            "type": "string"
          },
          "hora": {
            "type": "string"
          },
          "jornada": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "status_text": {
            "type": "string",
            "enum": [
              "Agendado",
              "Asistió",
              "No asistió",
              "Reprogramó",
              "Canceló",
              "Desconocido"
            ]
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string"
          },
          "referido": {
            "type": "object",
            "description": "Relaciones cargadas",
            "properties": {
              "id": {
                "type": "string"
              },
              "nombre": {
                "type": "string"
              },
              "celular": {
                "type": "string"
              },
              "ciudad": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "status_text": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "nombre",
              "celular",
              "ciudad",
              "status",
              "status_text"
            ]
          },
          "agendador": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "email"
            ]
          }
        },
        "required": [
          "id",
          "referido_id",
          "agendador_id",
          "fecha",
          "hora",
          "jornada",
          "status",
          "status_text",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "title": "AgendaResource"
      },
      "App.Http.Resources.Api.Dashboard.UserResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "array",
            "items": {}
          },
          "email": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "created_at"
        ],
        "title": "App.Http.Resources.Api.Dashboard.UserResource"
      },
      "AreaResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nombre": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "status_text": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string"
          },
          "sedes": {
            "type": "string",
            "description": "Relaciones cargadas"
          },
          "sedes_count": {
            "type": "string",
            "description": "Contadores"
          }
        },
        "required": [
          "id",
          "nombre",
          "status",
          "status_text",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "title": "AreaResource"
      },
      "CicloResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nombre": {
            "type": "string"
          },
          "descripcion": {
            "type": "string"
          },
          "fecha_inicio": {
            "type": "string"
          },
          "fecha_fin": {
            "type": "string"
          },
          "fecha_fin_automatica": {
            "type": "string"
          },
          "duracion_dias": {
            "type": "string"
          },
          "duracion_estimada": {
            "type": "string"
          },
          "total_horas": {
            "type": "string"
          },
          "horas_por_semana": {
            "type": "string"
          },
          "en_curso": {
            "type": "string"
          },
          "finalizado": {
            "type": "string"
          },
          "por_iniciar": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "status_text": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string"
          },
          "sede": {
            "type": "object",
            "description": "Relaciones cargadas",
            "properties": {
              "id": {
                "type": "string"
              },
              "nombre": {
                "type": "string"
              },
              "direccion": {
                "type": "string"
              },
              "telefono": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "hora_inicio": {
                "type": "string"
              },
              "hora_fin": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "status_text": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "nombre",
              "direccion",
              "telefono",
              "email",
              "hora_inicio",
              "hora_fin",
              "status",
              "status_text"
            ]
          },
          "curso": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "nombre": {
                "type": "string"
              },
              "duracion": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "status_text": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "nombre",
              "duracion",
              "status",
              "status_text"
            ]
          },
          "grupos": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 0,
                "maxItems": 0,
                "additionalItems": false
              }
            ]
          },
          "sede_count": {
            "type": "integer",
            "description": "Contadores"
          },
          "curso_count": {
            "type": "integer"
          },
          "grupos_count": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "nombre",
          "descripcion",
          "fecha_inicio",
          "fecha_fin",
          "fecha_fin_automatica",
          "duracion_dias",
          "duracion_estimada",
          "total_horas",
          "horas_por_semana",
          "en_curso",
          "finalizado",
          "por_iniciar",
          "status",
          "status_text",
          "created_at",
          "updated_at",
          "deleted_at",
          "grupos"
        ],
        "title": "CicloResource"
      },
      "CursoResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nombre": {
            "type": "string"
          },
          "duracion": {
            "type": "string"
          },
          "tipo": {
            "type": "string"
          },
          "tipo_text": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "status_text": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string"
          },
          "referidos": {
            "type": "string",
            "description": "Relaciones cargadas"
          },
          "estudiantes": {
            "type": "string"
          },
          "referidos_count": {
            "type": "string",
            "description": "Contadores"
          },
          "estudiantes_count": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "nombre",
          "duracion",
          "tipo",
          "tipo_text",
          "status",
          "status_text",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "title": "CursoResource"
      },
      "DashboardCardResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "dashboard_id": {
            "type": "string"
          },
          "kpi_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "background_color": {
            "type": "string"
          },
          "text_color": {
            "type": "string"
          },
          "width": {
            "type": "string"
          },
          "height": {
            "type": "string"
          },
          "x_position": {
            "type": "string"
          },
          "y_position": {
            "type": "string"
          },
          "period_type": {
            "type": "string"
          },
          "period_start_date": {
            "type": "string"
          },
          "period_end_date": {
            "type": "string"
          },
          "custom_field_values": {
            "type": "string"
          },
          "order": {
            "type": "string"
          },
          "kpi_value": {
            "type": "string"
          },
          "kpi": {
            "$ref": "#/components/schemas/KpiResource"
          },
          "dashboard": {
            "$ref": "#/components/schemas/DashboardResource"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "dashboard_id",
          "kpi_id",
          "title",
          "background_color",
          "text_color",
          "width",
          "height",
          "x_position",
          "y_position",
          "period_type",
          "period_start_date",
          "period_end_date",
          "custom_field_values",
          "order",
          "created_at",
          "updated_at"
        ],
        "title": "DashboardCardResource"
      },
      "DashboardResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "tenant_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "is_default": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/App.Http.Resources.Api.Dashboard.UserResource"
          },
          "dashboard_cards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DashboardCardResource"
            }
          },
          "dashboard_cards_count": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "tenant_id",
          "user_id",
          "name",
          "is_default",
          "created_at",
          "updated_at"
        ],
        "title": "DashboardResource"
      },
      "FieldMetadataResource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "is_primary_key": {
            "type": "boolean"
          },
          "is_timestamp": {
            "type": "boolean"
          },
          "is_foreign_key": {
            "type": "boolean"
          },
          "is_searchable": {
            "type": "boolean"
          },
          "is_sortable": {
            "type": "boolean"
          },
          "is_filterable": {
            "type": "boolean"
          },
          "suggested_operations": {
            "type": "array",
            "prefixItems": [
              {
                "type": "string",
                "enum": [
                  "count"
                ]
              }
            ],
            "minItems": 1,
            "maxItems": 1,
            "additionalItems": false
          },
          "validation_rules": {
            "type": "array",
            "prefixItems": [
              {
                "type": "string",
                "enum": [
                  "integer"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "numeric"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "string"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "boolean"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "date"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "date"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "required"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "nullable"
                ]
              }
            ],
            "minItems": 8,
            "maxItems": 8,
            "additionalItems": false
          }
        },
        "required": [
          "name",
          "display_name",
          "type",
          "is_primary_key",
          "is_timestamp",
          "is_foreign_key",
          "is_searchable",
          "is_sortable",
          "is_filterable",
          "suggested_operations",
          "validation_rules"
        ],
        "title": "FieldMetadataResource"
      },
      "GrupoResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nombre": {
            "type": "string"
          },
          "inscritos": {
            "type": "string"
          },
          "jornada": {
            "type": "string"
          },
          "jornada_nombre": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "status_text": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string"
          },
          "sede": {
            "type": "object",
            "description": "Relaciones cargadas",
            "properties": {
              "id": {
                "type": "string"
              },
              "nombre": {
                "type": "string"
              },
              "direccion": {
                "type": "string"
              },
              "telefono": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "hora_inicio": {
                "type": "string"
              },
              "hora_fin": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "status_text": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "nombre",
              "direccion",
              "telefono",
              "email",
              "hora_inicio",
              "hora_fin",
              "status",
              "status_text"
            ]
          },
          "modulo": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "nombre": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "status_text": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "nombre",
              "status",
              "status_text"
            ]
          },
          "profesor": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "documento": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "email",
              "documento"
            ]
          },
          "horarios": {
            "type": "string"
          },
          "sede_count": {
            "type": "string",
            "description": "Contadores"
          },
          "modulo_count": {
            "type": "string"
          },
          "profesor_count": {
            "type": "string"
          },
          "horarios_count": {
            "type": "string"
          },
          "total_horas_semana": {
            "type": "string",
            "description": "Información adicional de horarios"
          },
          "dias_clase": {
            "type": "string"
          },
          "tiene_horarios": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "nombre",
          "inscritos",
          "jornada",
          "jornada_nombre",
          "status",
          "status_text",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "title": "GrupoResource"
      },
      "HorarioResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "sede_id": {
            "type": "string"
          },
          "area_id": {
            "type": "string"
          },
          "grupo_id": {
            "type": "string"
          },
          "grupo_nombre": {
            "type": "string"
          },
          "tipo": {
            "type": "string"
          },
          "tipo_text": {
            "type": "string",
            "enum": [
              "Horario de Sede",
              "Horario de Grupo"
            ]
          },
          "periodo": {
            "type": "string"
          },
          "periodo_text": {
            "type": "string",
            "enum": [
              "Inicio",
              "Fin"
            ]
          },
          "dia": {
            "type": "string"
          },
          "hora": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "status_text": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string"
          },
          "sede": {
            "type": "object",
            "description": "Relaciones cargadas",
            "properties": {
              "id": {
                "type": "string"
              },
              "nombre": {
                "type": "string"
              },
              "direccion": {
                "type": "string"
              },
              "telefono": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "hora_inicio": {
                "type": "string"
              },
              "hora_fin": {
                "type": "string"
              },
              "poblacion_id": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "nombre",
              "direccion",
              "telefono",
              "email",
              "hora_inicio",
              "hora_fin",
              "poblacion_id"
            ]
          },
          "area": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "nombre": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "status_text": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "nombre",
              "status",
              "status_text"
            ]
          },
          "sede_count": {
            "type": "string",
            "description": "Contadores"
          },
          "area_count": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "sede_id",
          "area_id",
          "grupo_id",
          "grupo_nombre",
          "tipo",
          "tipo_text",
          "periodo",
          "periodo_text",
          "dia",
          "hora",
          "status",
          "status_text",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "title": "HorarioResource"
      },
      "KpiFieldRelationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "kpi_id": {
            "type": "string"
          },
          "field_a_id": {
            "type": "string"
          },
          "field_b_id": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "operation_display": {
            "type": "string"
          },
          "field_a_model": {
            "type": "string"
          },
          "field_b_model": {
            "type": "string"
          },
          "field_a_conditions": {
            "type": "string"
          },
          "field_b_conditions": {
            "type": "string"
          },
          "multiplier": {
            "type": "string"
          },
          "is_active": {
            "type": "string"
          },
          "order": {
            "type": "string"
          },
          "field_a": {
            "$ref": "#/components/schemas/KpiFieldResource"
          },
          "field_b": {
            "$ref": "#/components/schemas/KpiFieldResource"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "kpi_id",
          "field_a_id",
          "field_b_id",
          "operation",
          "operation_display",
          "field_a_model",
          "field_b_model",
          "field_a_conditions",
          "field_b_conditions",
          "multiplier",
          "is_active",
          "order",
          "created_at",
          "updated_at"
        ],
        "title": "KpiFieldRelationResource"
      },
      "KpiFieldResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "kpi_id": {
            "type": "string"
          },
          "field_name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "field_type": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "is_required": {
            "type": "string"
          },
          "order": {
            "type": "string"
          },
          "kpi": {
            "$ref": "#/components/schemas/KpiResource"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "kpi_id",
          "field_name",
          "display_name",
          "field_type",
          "operation",
          "operator",
          "value",
          "is_required",
          "order",
          "created_at",
          "updated_at"
        ],
        "title": "KpiFieldResource"
      },
      "KpiResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "is_active": {
            "type": "string"
          },
          "calculation_type": {
            "type": "string"
          },
          "base_model": {
            "type": "string"
          },
          "base_model_config": {
            "type": "string"
          },
          "base_model_display_name": {
            "type": "string"
          },
          "base_model_fields": {
            "type": "string"
          },
          "default_period_type": {
            "type": "string"
          },
          "default_period_start_date": {
            "type": "string"
          },
          "default_period_end_date": {
            "type": "string"
          },
          "use_custom_time_range": {
            "type": "string"
          },
          "has_time_range": {
            "type": "string"
          },
          "kpi_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KpiFieldResource"
            }
          },
          "field_relations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KpiFieldRelationResource"
            }
          },
          "has_field_relations": {
            "type": "boolean"
          },
          "dashboard_cards_count": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "code",
          "description",
          "unit",
          "is_active",
          "calculation_type",
          "base_model",
          "base_model_config",
          "base_model_display_name",
          "base_model_fields",
          "default_period_type",
          "default_period_start_date",
          "default_period_end_date",
          "use_custom_time_range",
          "has_time_range",
          "created_at",
          "updated_at"
        ],
        "title": "KpiResource"
      },
      "ModuloResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nombre": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "status_text": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string"
          },
          "cursos": {
            "type": "string",
            "description": "Relaciones cargadas"
          },
          "grupos": {
            "type": "string"
          },
          "cursos_count": {
            "type": "string",
            "description": "Contadores"
          },
          "grupos_count": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "nombre",
          "status",
          "status_text",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "title": "ModuloResource"
      },
      "PoblacionResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "pais": {
            "type": "string"
          },
          "provincia": {
            "type": "string"
          },
          "nombre": {
            "type": "string"
          },
          "latitud": {
            "type": "string"
          },
          "longitud": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "pais",
          "provincia",
          "nombre",
          "latitud",
          "longitud",
          "created_at",
          "updated_at"
        ],
        "title": "PoblacionResource"
      },
      "ReferidoResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nombre": {
            "type": "string"
          },
          "celular": {
            "type": "string"
          },
          "ciudad": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "status_text": {
            "type": "string"
          },
          "curso": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "nombre": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "nombre"
            ]
          },
          "gestor": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "email"
            ]
          },
          "seguimientos": {
            "type": "string"
          },
          "agendamientos": {
            "type": "string"
          },
          "seguimientos_count": {
            "type": "string"
          },
          "agendamientos_count": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string"
          },
          "is_deleted": {
            "type": "string"
          },
          "is_matriculado": {
            "type": "string"
          },
          "can_be_deleted": {
            "type": "string"
          },
          "days_since_created": {
            "type": "string"
          },
          "next_suggested_status": {
            "type": "string"
          },
          "next_suggested_status_text": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "nombre",
          "celular",
          "ciudad",
          "status",
          "status_text",
          "created_at",
          "updated_at",
          "is_deleted",
          "is_matriculado",
          "can_be_deleted",
          "days_since_created",
          "next_suggested_status",
          "next_suggested_status_text"
        ],
        "title": "ReferidoResource"
      },
      "SedeResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nombre": {
            "type": "string"
          },
          "direccion": {
            "type": "string"
          },
          "telefono": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "hora_inicio": {
            "type": "string"
          },
          "hora_fin": {
            "type": "string"
          },
          "duracion_horas": {
            "type": "string"
          },
          "duracion_minutos": {
            "type": "string"
          },
          "poblacion_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string"
          },
          "poblacion": {
            "type": "object",
            "description": "Relaciones cargadas",
            "properties": {
              "id": {
                "type": "string"
              },
              "nombre": {
                "type": "string"
              },
              "pais": {
                "type": "string"
              },
              "provincia": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "nombre",
              "pais",
              "provincia"
            ]
          },
          "areas": {
            "type": "string"
          },
          "horarios": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "grupos": {
            "type": "string"
          },
          "poblacion_count": {
            "type": "string",
            "description": "Contadores"
          },
          "areas_count": {
            "type": "string"
          },
          "horarios_count": {
            "type": "string"
          },
          "grupos_count": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "nombre",
          "direccion",
          "telefono",
          "email",
          "hora_inicio",
          "hora_fin",
          "duracion_horas",
          "duracion_minutos",
          "poblacion_id",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "title": "SedeResource"
      },
      "SeguimientoResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "referido_id": {
            "type": "string"
          },
          "seguidor_id": {
            "type": "string"
          },
          "fecha": {
            "type": "string"
          },
          "seguimiento": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string"
          },
          "referido": {
            "type": "string",
            "description": "Relaciones"
          },
          "seguidor": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "referido_id",
          "seguidor_id",
          "fecha",
          "seguimiento",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "title": "SeguimientoResource"
      },
      "StoreAgendaRequest": {
        "type": "object",
        "properties": {
          "referido_id": {
            "type": "integer"
          },
          "agendador_id": {
            "type": "integer"
          },
          "fecha": {
            "type": "string",
            "format": "date-time"
          },
          "hora": {
            "type": "string",
            "format": "date"
          },
          "jornada": {
            "type": "string",
            "enum": [
              "am",
              "pm"
            ]
          },
          "status": {
            "type": "integer",
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ]
          }
        },
        "required": [
          "referido_id",
          "fecha",
          "hora",
          "jornada"
        ],
        "title": "StoreAgendaRequest"
      },
      "StoreAreaRequest": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "maxLength": 255
          },
          "status": {
            "type": "integer",
            "enum": [
              "0",
              "1"
            ]
          },
          "sedes": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "nombre"
        ],
        "title": "StoreAreaRequest"
      },
      "StoreCicloRequest": {
        "type": "object",
        "properties": {
          "sede_id": {
            "type": "integer"
          },
          "curso_id": {
            "type": "integer"
          },
          "nombre": {
            "type": "string",
            "maxLength": 255
          },
          "descripcion": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 1000
          },
          "fecha_inicio": {
            "type": "string",
            "format": "date-time"
          },
          "fecha_fin": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "fecha_fin_automatica": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "status": {
            "type": "integer",
            "enum": [
              "0",
              "1"
            ]
          },
          "grupos": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "sede_id",
          "curso_id",
          "nombre",
          "fecha_inicio"
        ],
        "title": "StoreCicloRequest"
      },
      "StoreCursoRequest": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "maxLength": 255
          },
          "duracion": {
            "type": "number",
            "minimum": 0
          },
          "tipo": {
            "type": "integer",
            "enum": [
              "0",
              "1"
            ]
          },
          "status": {
            "type": "integer",
            "enum": [
              "0",
              "1"
            ]
          }
        },
        "required": [
          "nombre",
          "duracion",
          "tipo"
        ],
        "title": "StoreCursoRequest"
      },
      "StoreDashboardCardRequest": {
        "type": "object",
        "description": "Request StoreDashboardCardRequest\n\nValida los datos para crear una nueva tarjeta de dashboard.\nIncluye validación específica para configuración de gráficos y filtros.",
        "properties": {
          "dashboard_id": {
            "type": "integer",
            "description": "Campos básicos de la tarjeta"
          },
          "kpi_id": {
            "type": "integer"
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "background_color": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 7
          },
          "text_color": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 7
          },
          "width": {
            "type": "integer",
            "minimum": 1,
            "maximum": 12
          },
          "height": {
            "type": "integer",
            "minimum": 1,
            "maximum": 12
          },
          "x_position": {
            "type": "integer",
            "minimum": 0
          },
          "y_position": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "type": "integer",
            "minimum": 0
          },
          "period_type": {
            "type": [
              "string",
              "null"
            ],
            "description": "Campos de periodo",
            "enum": [
              "daily",
              "weekly",
              "monthly",
              "yearly",
              "custom"
            ]
          },
          "period_start_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "period_end_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "chart_type": {
            "type": "string",
            "description": "Campos de gráficos",
            "enum": [
              "bar",
              "pie",
              "line",
              "area",
              "scatter"
            ]
          },
          "group_by": {
            "type": "string",
            "description": "Campo de agrupación",
            "maxLength": 255
          },
          "custom_field_values": {
            "type": "array",
            "description": "Valores personalizados",
            "items": {
              "type": "string"
            }
          },
          "chart_parameters": {
            "type": "object",
            "properties": {
              "orientation": {
                "type": "string",
                "enum": [
                  "vertical",
                  "horizontal"
                ]
              },
              "stacked": {
                "type": "boolean"
              },
              "show_values": {
                "type": "boolean"
              },
              "show_percentages": {
                "type": "boolean"
              },
              "show_legend": {
                "type": "boolean"
              },
              "legend_position": {
                "type": "string",
                "enum": [
                  "top",
                  "bottom",
                  "left",
                  "right"
                ]
              },
              "donut": {
                "type": "boolean"
              },
              "donut_size": {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              },
              "smooth": {
                "type": "boolean"
              },
              "show_points": {
                "type": "boolean"
              },
              "fill_area": {
                "type": "boolean"
              },
              "show_grid": {
                "type": "boolean"
              },
              "y_axis_min": {
                "type": "number"
              },
              "y_axis_max": {
                "type": "number"
              },
              "opacity": {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              },
              "gradient": {
                "type": "boolean"
              },
              "point_size": {
                "type": "integer",
                "minimum": 1,
                "maximum": 20
              },
              "show_trend_line": {
                "type": "boolean"
              }
            }
          },
          "filters": {
            "type": "array",
            "description": "Filtros dinámicos",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "maxLength": 255
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "exact",
                    "in",
                    "date_range",
                    "text",
                    "multiple",
                    "null",
                    "range",
                    "custom"
                  ]
                },
                "value": {
                  "type": "string"
                },
                "operator": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "maxLength": 10
                },
                "custom_type": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "maxLength": 50
                }
              },
              "required": [
                "field",
                "type",
                "value"
              ]
            }
          }
        },
        "required": [
          "dashboard_id",
          "kpi_id",
          "title",
          "chart_type",
          "group_by"
        ],
        "title": "StoreDashboardCardRequest"
      },
      "StoreDashboardRequest": {
        "type": "object",
        "description": "Request StoreDashboardRequest\n\nValida los datos para crear un nuevo dashboard.\nIncluye validación de usuario y configuración del dashboard.",
        "properties": {
          "user_id": {
            "type": "integer"
          },
          "tenant_id": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 1
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "is_default": {
            "type": "boolean"
          }
        },
        "required": [
          "user_id",
          "name"
        ],
        "title": "StoreDashboardRequest"
      },
      "StoreGrupoHorarioRequest": {
        "type": "object",
        "properties": {
          "horarios": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "area_id": {
                  "type": "integer"
                },
                "dia": {
                  "type": "string",
                  "enum": [
                    "lunes",
                    "martes",
                    "miércoles",
                    "jueves",
                    "viernes",
                    "sábado",
                    "domingo"
                  ]
                },
                "hora": {
                  "type": "string",
                  "format": "date"
                },
                "duracion_horas": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 8
                },
                "status": {
                  "type": "integer",
                  "enum": [
                    "0",
                    "1"
                  ]
                }
              },
              "required": [
                "area_id",
                "dia",
                "hora"
              ]
            },
            "minItems": 1
          }
        },
        "required": [
          "horarios"
        ],
        "title": "StoreGrupoHorarioRequest"
      },
      "StoreGrupoRequest": {
        "type": "object",
        "properties": {
          "sede_id": {
            "type": "integer"
          },
          "modulo_id": {
            "type": "integer"
          },
          "profesor_id": {
            "type": "integer"
          },
          "nombre": {
            "type": "string",
            "maxLength": 255
          },
          "inscritos": {
            "type": "integer",
            "minimum": 0,
            "maximum": 50
          },
          "jornada": {
            "type": "integer",
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ]
          },
          "status": {
            "type": "integer",
            "enum": [
              "0",
              "1"
            ]
          },
          "horarios": {
            "type": "array",
            "description": "Horarios opcionales",
            "items": {
              "type": "object",
              "properties": {
                "area_id": {
                  "type": "integer"
                },
                "dia": {
                  "type": "string",
                  "enum": [
                    "lunes",
                    "martes",
                    "miércoles",
                    "jueves",
                    "viernes",
                    "sábado",
                    "domingo"
                  ]
                },
                "hora": {
                  "type": "string",
                  "format": "date"
                },
                "duracion_horas": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 8
                },
                "status": {
                  "type": "integer",
                  "enum": [
                    "0",
                    "1"
                  ]
                }
              }
            },
            "minItems": 1
          }
        },
        "required": [
          "sede_id",
          "modulo_id",
          "profesor_id",
          "nombre",
          "inscritos",
          "jornada"
        ],
        "title": "StoreGrupoRequest"
      },
      "StoreHorarioRequest": {
        "type": "object",
        "properties": {
          "sede_id": {
            "type": "integer"
          },
          "area_id": {
            "type": "integer"
          },
          "grupo_id": {
            "type": [
              "integer",
              "null"
            ]
          },
          "grupo_nombre": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "tipo": {
            "type": "boolean"
          },
          "periodo": {
            "type": "boolean"
          },
          "dia": {
            "type": "string",
            "enum": [
              "lunes",
              "martes",
              "miércoles",
              "jueves",
              "viernes",
              "sábado",
              "domingo"
            ]
          },
          "hora": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "sede_id",
          "area_id",
          "tipo",
          "periodo",
          "dia",
          "hora"
        ],
        "title": "StoreHorarioRequest"
      },
      "StoreKpiFieldRelationRequest": {
        "type": "object",
        "description": "Request StoreKpiFieldRelationRequest\n\nValida los datos para crear una nueva relación entre campos de KPI.\nIncluye validación de campos, operaciones y condiciones.",
        "properties": {
          "field_a_id": {
            "type": "integer"
          },
          "field_b_id": {
            "type": "integer"
          },
          "operation": {
            "type": "string",
            "enum": [
              "divide",
              "multiply",
              "add",
              "subtract",
              "percentage"
            ]
          },
          "field_a_model": {
            "type": [
              "string",
              "null"
            ]
          },
          "field_b_model": {
            "type": [
              "string",
              "null"
            ]
          },
          "multiplier": {
            "type": [
              "number",
              "null"
            ],
            "minimum": 0,
            "maximum": 999999.9999
          },
          "is_active": {
            "type": "boolean"
          },
          "order": {
            "type": "integer",
            "minimum": 0
          },
          "field_a_conditions": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "maxLength": 255
                },
                "operator": {
                  "type": "string",
                  "enum": [
                    "=",
                    "!=",
                    "<",
                    ">",
                    "<=",
                    ">=",
                    "LIKE",
                    "NOT LIKE",
                    "IN",
                    "NOT IN"
                  ]
                },
                "value": {
                  "type": "string",
                  "maxLength": 500
                }
              }
            }
          },
          "field_b_conditions": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "maxLength": 255
                },
                "operator": {
                  "type": "string",
                  "enum": [
                    "=",
                    "!=",
                    "<",
                    ">",
                    "<=",
                    ">=",
                    "LIKE",
                    "NOT LIKE",
                    "IN",
                    "NOT IN"
                  ]
                },
                "value": {
                  "type": "string",
                  "maxLength": 500
                }
              }
            }
          }
        },
        "required": [
          "field_a_id",
          "field_b_id",
          "operation"
        ],
        "title": "StoreKpiFieldRelationRequest"
      },
      "StoreKpiFieldRequest": {
        "type": "object",
        "description": "Request StoreKpiFieldRequest\n\nValida los datos para crear un nuevo campo de KPI.\nIncluye validación de operaciones y tipos de campo.",
        "properties": {
          "kpi_id": {
            "type": "integer"
          },
          "field_name": {
            "type": "string",
            "maxLength": 255
          },
          "display_name": {
            "type": "string",
            "maxLength": 255
          },
          "field_type": {
            "type": "string",
            "enum": [
              "numeric",
              "string",
              "date",
              "boolean"
            ]
          },
          "operation": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "sum",
              "count",
              "avg",
              "min",
              "max",
              "where",
              "group_by"
            ]
          },
          "operator": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 10
          },
          "value": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "is_required": {
            "type": "boolean"
          },
          "order": {
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "kpi_id",
          "field_name",
          "display_name",
          "field_type"
        ],
        "title": "StoreKpiFieldRequest"
      },
      "StoreKpiRequest": {
        "type": "object",
        "description": "Request StoreKpiRequest\n\nValida los datos para crear un nuevo KPI.\nIncluye validación de modelo base y campos de configuración.",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "code": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 1000
          },
          "unit": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 50
          },
          "is_active": {
            "type": "boolean"
          },
          "calculation_type": {
            "type": "string",
            "enum": [
              "predefined",
              "custom_fields",
              "sql_query"
            ]
          },
          "base_model": {
            "type": [
              "integer",
              "null"
            ]
          },
          "default_period_type": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "daily",
              "weekly",
              "monthly",
              "yearly",
              "custom"
            ]
          },
          "default_period_start_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "default_period_end_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "use_custom_time_range": {
            "type": "boolean"
          },
          "kpi_fields": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "object",
              "properties": {
                "field_name": {
                  "type": "string",
                  "maxLength": 255
                },
                "display_name": {
                  "type": "string",
                  "maxLength": 255
                },
                "field_type": {
                  "type": "string",
                  "enum": [
                    "numeric",
                    "string",
                    "date",
                    "boolean"
                  ]
                },
                "operation": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "sum",
                    "count",
                    "avg",
                    "min",
                    "max",
                    "where",
                    "group_by"
                  ]
                },
                "operator": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "maxLength": 10
                },
                "value": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "maxLength": 500
                },
                "is_required": {
                  "type": "boolean"
                },
                "order": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        },
        "required": [
          "name",
          "code",
          "calculation_type"
        ],
        "title": "StoreKpiRequest"
      },
      "StoreModuloRequest": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "maxLength": 255
          },
          "status": {
            "type": "integer",
            "enum": [
              "0",
              "1"
            ]
          },
          "curso_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "nombre"
        ],
        "title": "StoreModuloRequest"
      },
      "StoreReferidoRequest": {
        "type": "object",
        "properties": {
          "curso_id": {
            "type": "integer"
          },
          "gestor_id": {
            "type": "integer"
          },
          "nombre": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "celular": {
            "type": "string",
            "maxLength": 20
          },
          "ciudad": {
            "type": "string",
            "maxLength": 100
          },
          "status": {
            "type": "integer",
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ]
          }
        },
        "required": [
          "curso_id",
          "gestor_id",
          "celular",
          "ciudad"
        ],
        "title": "StoreReferidoRequest"
      },
      "StoreSedeRequest": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "maxLength": 255
          },
          "direccion": {
            "type": "string",
            "maxLength": 500
          },
          "telefono": {
            "type": "string",
            "maxLength": 20
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 255
          },
          "hora_inicio": {
            "type": "string",
            "format": "date"
          },
          "hora_fin": {
            "type": "string",
            "format": "date"
          },
          "poblacion_id": {
            "type": "integer"
          },
          "areas": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "horarios": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "area_id": {
                  "type": "integer"
                },
                "dia": {
                  "type": "string",
                  "enum": [
                    "lunes",
                    "martes",
                    "miércoles",
                    "jueves",
                    "viernes",
                    "sábado",
                    "domingo"
                  ]
                },
                "hora": {
                  "type": "string",
                  "format": "date"
                },
                "tipo": {
                  "type": "boolean"
                },
                "periodo": {
                  "type": "boolean"
                },
                "grupo_id": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "grupo_nombre": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "maxLength": 255
                }
              },
              "required": [
                "area_id",
                "dia",
                "hora"
              ]
            },
            "minItems": 1
          }
        },
        "required": [
          "nombre",
          "direccion",
          "telefono",
          "email",
          "hora_inicio",
          "hora_fin",
          "poblacion_id",
          "horarios"
        ],
        "title": "StoreSedeRequest"
      },
      "StoreSeguimientoRequest": {
        "type": "object",
        "properties": {
          "referido_id": {
            "type": "integer"
          },
          "seguidor_id": {
            "type": "integer"
          },
          "fecha": {
            "type": "string",
            "format": "date-time"
          },
          "seguimiento": {
            "type": "string",
            "maxLength": 65535
          }
        },
        "required": [
          "referido_id",
          "seguidor_id",
          "fecha",
          "seguimiento"
        ],
        "title": "StoreSeguimientoRequest"
      },
      "StoreTopicoRequest": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "maxLength": 255
          },
          "descripcion": {
            "type": "string",
            "maxLength": 1000
          },
          "duracion": {
            "type": "integer",
            "minimum": 1,
            "maximum": 999
          },
          "status": {
            "type": "integer",
            "enum": [
              "0",
              "1"
            ]
          },
          "modulo_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "nombre",
          "descripcion",
          "duracion"
        ],
        "title": "StoreTopicoRequest"
      },
      "StoreUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 255
          },
          "documento": {
            "type": "string",
            "maxLength": 255
          },
          "password": {
            "type": "string"
          },
          "password_confirmation": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "permissions": {
            "type": "array",
            "description": "Valida que los roles existan",
            "items": {
              "type": "string"
            }
          },
          "cursos": {
            "type": "array",
            "description": "Valida que los permisos existan",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "name",
          "email",
          "documento",
          "password",
          "password_confirmation"
        ],
        "title": "StoreUserRequest"
      },
      "TopicoResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nombre": {
            "type": "string"
          },
          "descripcion": {
            "type": "string"
          },
          "duracion": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "status_text": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string"
          },
          "modulos": {
            "type": "string",
            "description": "Relaciones cargadas"
          },
          "modulos_count": {
            "type": "string",
            "description": "Contadores"
          }
        },
        "required": [
          "id",
          "nombre",
          "descripcion",
          "duracion",
          "status",
          "status_text",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "title": "TopicoResource"
      },
      "UpdateAgendaRequest": {
        "type": "object",
        "properties": {
          "referido_id": {
            "type": "integer"
          },
          "agendador_id": {
            "type": "integer"
          },
          "fecha": {
            "type": "string",
            "format": "date-time"
          },
          "hora": {
            "type": "string",
            "format": "date"
          },
          "jornada": {
            "type": "string",
            "enum": [
              "am",
              "pm"
            ]
          },
          "status": {
            "type": "integer",
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ]
          }
        },
        "title": "UpdateAgendaRequest"
      },
      "UpdateCicloRequest": {
        "type": "object",
        "properties": {
          "sede_id": {
            "type": "integer"
          },
          "curso_id": {
            "type": "integer"
          },
          "nombre": {
            "type": "string",
            "maxLength": 255
          },
          "descripcion": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 1000
          },
          "fecha_inicio": {
            "type": "string",
            "format": "date-time"
          },
          "fecha_fin": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "fecha_fin_automatica": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "grupos": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "integer"
            }
          }
        },
        "title": "UpdateCicloRequest"
      },
      "UpdateCursoRequest": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "maxLength": 255
          },
          "duracion": {
            "type": "number",
            "minimum": 0
          },
          "tipo": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          }
        },
        "title": "UpdateCursoRequest"
      },
      "UpdateDashboardCardRequest": {
        "type": "object",
        "description": "Request UpdateDashboardCardRequest\n\nValida los datos para actualizar una tarjeta de dashboard existente.\nIncluye validación de posicionamiento y configuración visual.",
        "properties": {
          "title": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "background_color": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 7
          },
          "text_color": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 7
          },
          "width": {
            "type": "integer",
            "minimum": 1,
            "maximum": 12
          },
          "height": {
            "type": "integer",
            "minimum": 1,
            "maximum": 12
          },
          "x_position": {
            "type": "integer",
            "minimum": 0
          },
          "y_position": {
            "type": "integer",
            "minimum": 0
          },
          "period_type": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "daily",
              "weekly",
              "monthly",
              "yearly",
              "custom"
            ]
          },
          "period_start_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "period_end_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "custom_field_values": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "order": {
            "type": "integer",
            "minimum": 0
          }
        },
        "title": "UpdateDashboardCardRequest"
      },
      "UpdateDashboardRequest": {
        "type": "object",
        "description": "Request UpdateDashboardRequest\n\nValida los datos para actualizar un dashboard existente.\nIncluye validación de configuración del dashboard.",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "is_default": {
            "type": "boolean"
          },
          "dashboard_cards": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "kpi_id": {
                  "type": "integer"
                },
                "title": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "maxLength": 255
                },
                "background_color": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "maxLength": 7
                },
                "text_color": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "maxLength": 7
                },
                "width": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 12
                },
                "height": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 12
                },
                "x_position": {
                  "type": "integer",
                  "minimum": 0
                },
                "y_position": {
                  "type": "integer",
                  "minimum": 0
                },
                "period_type": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "daily",
                    "weekly",
                    "monthly",
                    "yearly",
                    "custom"
                  ]
                },
                "period_start_date": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time"
                },
                "period_end_date": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time"
                },
                "custom_field_values": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "order": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        },
        "title": "UpdateDashboardRequest"
      },
      "UpdateGrupoHorarioRequest": {
        "type": "object",
        "properties": {
          "horarios": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "area_id": {
                  "type": "integer"
                },
                "dia": {
                  "type": "string",
                  "enum": [
                    "lunes",
                    "martes",
                    "miércoles",
                    "jueves",
                    "viernes",
                    "sábado",
                    "domingo"
                  ]
                },
                "hora": {
                  "type": "string",
                  "format": "date"
                },
                "status": {
                  "type": "integer",
                  "enum": [
                    "0",
                    "1"
                  ]
                }
              }
            },
            "minItems": 1
          }
        },
        "title": "UpdateGrupoHorarioRequest"
      },
      "UpdateGrupoRequest": {
        "type": "object",
        "properties": {
          "sede_id": {
            "type": "integer"
          },
          "modulo_id": {
            "type": "integer"
          },
          "profesor_id": {
            "type": "integer"
          },
          "nombre": {
            "type": "string",
            "maxLength": 255
          },
          "inscritos": {
            "type": "integer",
            "minimum": 0,
            "maximum": 50
          },
          "jornada": {
            "type": "integer",
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ]
          },
          "status": {
            "type": "string"
          }
        },
        "title": "UpdateGrupoRequest"
      },
      "UpdateHorarioRequest": {
        "type": "object",
        "properties": {
          "sede_id": {
            "type": "integer"
          },
          "area_id": {
            "type": "integer"
          },
          "grupo_id": {
            "type": [
              "integer",
              "null"
            ]
          },
          "grupo_nombre": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "tipo": {
            "type": "boolean"
          },
          "periodo": {
            "type": "boolean"
          },
          "dia": {
            "type": "string",
            "enum": [
              "lunes",
              "martes",
              "miércoles",
              "jueves",
              "viernes",
              "sábado",
              "domingo"
            ]
          },
          "hora": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string"
          }
        },
        "title": "UpdateHorarioRequest"
      },
      "UpdateKpiFieldRelationRequest": {
        "type": "object",
        "description": "Request UpdateKpiFieldRelationRequest\n\nValida los datos para actualizar una relación entre campos de KPI existente.\nIncluye validación de campos, operaciones y condiciones.",
        "properties": {
          "field_a_id": {
            "type": "integer"
          },
          "field_b_id": {
            "type": "integer"
          },
          "operation": {
            "type": "string",
            "enum": [
              "divide",
              "multiply",
              "add",
              "subtract",
              "percentage"
            ]
          },
          "field_a_model": {
            "type": [
              "string",
              "null"
            ]
          },
          "field_b_model": {
            "type": [
              "string",
              "null"
            ]
          },
          "multiplier": {
            "type": [
              "number",
              "null"
            ],
            "minimum": 0,
            "maximum": 999999.9999
          },
          "is_active": {
            "type": "boolean"
          },
          "order": {
            "type": "integer",
            "minimum": 0
          },
          "field_a_conditions": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "maxLength": 255
                },
                "operator": {
                  "type": "string",
                  "enum": [
                    "=",
                    "!=",
                    "<",
                    ">",
                    "<=",
                    ">=",
                    "LIKE",
                    "NOT LIKE",
                    "IN",
                    "NOT IN"
                  ]
                },
                "value": {
                  "type": "string",
                  "maxLength": 500
                }
              }
            }
          },
          "field_b_conditions": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "maxLength": 255
                },
                "operator": {
                  "type": "string",
                  "enum": [
                    "=",
                    "!=",
                    "<",
                    ">",
                    "<=",
                    ">=",
                    "LIKE",
                    "NOT LIKE",
                    "IN",
                    "NOT IN"
                  ]
                },
                "value": {
                  "type": "string",
                  "maxLength": 500
                }
              }
            }
          }
        },
        "title": "UpdateKpiFieldRelationRequest"
      },
      "UpdateKpiFieldRequest": {
        "type": "object",
        "description": "Request UpdateKpiFieldRequest\n\nValida los datos para actualizar un campo de KPI existente.\nIncluye validación de operaciones y tipos de campo.",
        "properties": {
          "field_name": {
            "type": "string",
            "maxLength": 255
          },
          "display_name": {
            "type": "string",
            "maxLength": 255
          },
          "field_type": {
            "type": "string",
            "enum": [
              "numeric",
              "string",
              "date",
              "boolean"
            ]
          },
          "operation": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "sum",
              "count",
              "avg",
              "min",
              "max",
              "where",
              "group_by"
            ]
          },
          "operator": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 10
          },
          "value": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "is_required": {
            "type": "boolean"
          },
          "order": {
            "type": "integer",
            "minimum": 0
          }
        },
        "title": "UpdateKpiFieldRequest"
      },
      "UpdateKpiRequest": {
        "type": "object",
        "description": "Request UpdateKpiRequest\n\nValida los datos para actualizar un KPI existente.\nIncluye validación de modelo base y campos de configuración.",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "code": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 1000
          },
          "unit": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 50
          },
          "is_active": {
            "type": "boolean"
          },
          "calculation_type": {
            "type": "string",
            "enum": [
              "predefined",
              "custom_fields",
              "sql_query"
            ]
          },
          "base_model": {
            "type": [
              "integer",
              "null"
            ]
          },
          "default_period_type": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "daily",
              "weekly",
              "monthly",
              "yearly",
              "custom"
            ]
          },
          "default_period_start_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "default_period_end_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "use_custom_time_range": {
            "type": "boolean"
          }
        },
        "title": "UpdateKpiRequest"
      },
      "UpdateModuloRequest": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "maxLength": 255
          },
          "status": {
            "type": "string"
          },
          "curso_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "title": "UpdateModuloRequest"
      },
      "UpdateReferidoRequest": {
        "type": "object",
        "properties": {
          "curso_id": {
            "type": "integer"
          },
          "gestor_id": {
            "type": "integer"
          },
          "nombre": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "celular": {
            "type": "string",
            "maxLength": 20
          },
          "ciudad": {
            "type": "string",
            "maxLength": 100
          },
          "status": {
            "type": "integer",
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ]
          }
        },
        "title": "UpdateReferidoRequest"
      },
      "UpdateSedeRequest": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "maxLength": 255
          },
          "direccion": {
            "type": "string",
            "maxLength": 500
          },
          "telefono": {
            "type": "string",
            "maxLength": 20
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 255
          },
          "hora_inicio": {
            "type": "string",
            "format": "date"
          },
          "hora_fin": {
            "type": "string",
            "format": "date"
          },
          "poblacion_id": {
            "type": "integer"
          },
          "areas": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "horarios": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "area_id": {
                  "type": "integer"
                },
                "dia": {
                  "type": "string",
                  "enum": [
                    "lunes",
                    "martes",
                    "miércoles",
                    "jueves",
                    "viernes",
                    "sábado",
                    "domingo"
                  ]
                },
                "hora": {
                  "type": "string",
                  "format": "date"
                },
                "tipo": {
                  "type": "boolean"
                },
                "periodo": {
                  "type": "boolean"
                },
                "grupo_id": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "grupo_nombre": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "maxLength": 255
                }
              }
            }
          }
        },
        "title": "UpdateSedeRequest"
      },
      "UpdateSeguimientoRequest": {
        "type": "object",
        "properties": {
          "referido_id": {
            "type": "integer"
          },
          "seguidor_id": {
            "type": "integer"
          },
          "fecha": {
            "type": "string",
            "format": "date-time"
          },
          "seguimiento": {
            "type": "string",
            "maxLength": 65535
          }
        },
        "title": "UpdateSeguimientoRequest"
      },
      "UpdateTopicoRequest": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "maxLength": 255
          },
          "descripcion": {
            "type": "string",
            "maxLength": 1000
          },
          "duracion": {
            "type": "integer",
            "minimum": 1,
            "maximum": 999
          },
          "status": {
            "type": "string"
          },
          "modulo_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "nombre",
          "descripcion",
          "duracion"
        ],
        "title": "UpdateTopicoRequest"
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 255
          },
          "documento": {
            "type": "string",
            "maxLength": 255
          },
          "password": {
            "type": "string"
          },
          "password_confirmation": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cursos": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "title": "UpdateUserRequest"
      },
      "UserResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {}
              }
            ]
          },
          "email": {
            "type": "string"
          },
          "documento": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "grupos": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "cursos": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "gestores": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "agendadores": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "seguimientos": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string"
          },
          "grupos_count": {
            "type": "string",
            "description": "Contadores"
          },
          "cursos_count": {
            "type": "string"
          },
          "gestores_count": {
            "type": "string"
          },
          "agendadores_count": {
            "type": "string"
          },
          "seguimientos_count": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "documento",
          "roles",
          "permissions",
          "grupos",
          "cursos",
          "gestores",
          "agendadores",
          "seguimientos",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "title": "UserResource"
      }
    },
    "responses": {
      "ValidationException": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Errors overview."
                },
                "errors": {
                  "type": "object",
                  "description": "A detailed description of each field that failed validation.",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "message",
                "errors"
              ]
            }
          }
        }
      },
      "AuthenticationException": {
        "description": "Unauthenticated",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error overview."
                }
              },
              "required": [
                "message"
              ]
            }
          }
        }
      },
      "ModelNotFoundException": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error overview."
                }
              },
              "required": [
                "message"
              ]
            }
          }
        }
      },
      "AuthorizationException": {
        "description": "Authorization error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error overview."
                }
              },
              "required": [
                "message"
              ]
            }
          }
        }
      }
    }
  }
}